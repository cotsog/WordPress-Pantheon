// ==========================================================================
// Responsive specification list.
// ==========================================================================

.spec-list {
	$spec-list-padding-gutter: $spacer;
	$spec-list-padding-x: #{$spacer / 2};
	$spec-list-padding-y: #{$spacer / 1};
	$spec-list-border: $hr-border-width solid $hr-border-color;
	border-bottom: $spec-list-border;

	@include reset-list;
	line-height: 1.25;
	font-size: $font-size-sm;

	.flex & {
		display: flex;
		flex-wrap: wrap;

		@include media-breakpoint-down(sm) {
			display: block;
			clear: both;
		}
	}

	@at-root {
		ul#{&} {

			@include media-breakpoint-up(sm) {
				padding-left: $spec-list-padding-gutter;

				.no-flex & {

					@include clearfix;
				}
			}
		}
	}

	> li {
		width: 100%;
		padding: $spec-list-padding-y $spec-list-padding-x;
		border-top: $spec-list-border;

		.flex & {
			display: flex;
			flex-direction: column;
			justify-content: center;
		}

		@include media-breakpoint-up(sm) {
			width: 50%;
			float: left;

			&:nth-child(2n + 1) {
				margin-left: -$spec-list-padding-gutter;
				clear: both;
			}

			&:nth-child(2n) {
				margin-left: $spec-list-padding-gutter;
			}
		}
	}

	> dt {
		width: 100%;
		margin: 0;
		padding: $spec-list-padding-y $spec-list-padding-x 0;
		border-top: $spec-list-border;
		font-weight: 300;

		@include media-breakpoint-up(sm) {
			float: left;
			width: 50%;
			padding: $spec-list-padding-y #{$spec-list-padding-gutter / 2} 0 $spec-list-padding-x;

			.flex & {
				float: none;
				padding-bottom: $spec-list-padding-y;
				border-top: $spec-list-border;
			}
		}
	}

	> dd {
		width: 100%;
		margin: 0;
		padding: 0 $spec-list-padding-x $spec-list-padding-y;

		@include media-breakpoint-up(sm) {

			@include clearfix;
			width: 100%;
			padding: $spec-list-padding-y $spec-list-padding-x $spec-list-padding-y 50%;
			border-top: $spec-list-border;

			.flex & {
				width: 50%;
				padding-left: #{$spec-list-padding-gutter / 2};

				&::after {
					content: none;
				}
			}
		}
	}

	&.alternating {
		> dt,
		> dd {
			&:nth-of-type(2n + 1) {
				background-color: $gray-lightest;
			}
		}

		> li {
			&:nth-child(2n + 1) {
				background-color: $gray-lightest;

				@include media-breakpoint-up(sm) {
					background-color: transparent;
				}
			}
		}
	}
}
