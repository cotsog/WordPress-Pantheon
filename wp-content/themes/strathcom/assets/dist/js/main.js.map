{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bower_components/bootstrap/dist/js/umd/collapse.js","bower_components/bootstrap/dist/js/umd/util.js","src/js/dropdown-nested.js","src/js/main.js","src/js/tabs.js"],"names":[],"mappingsrpaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module', './util'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module, require('./util'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod, global.Util);\n    global.collapse = mod.exports;\n  }\n})(this, function (exports, module, _util) {\n  'use strict';\n\n  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n  var _Util = _interopRequireDefault(_util);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.0.0-alpha.2): collapse.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Collapse = (function ($) {\n\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n\n    var NAME = 'collapse';\n    var VERSION = '4.0.0-alpha';\n    var DATA_KEY = 'bs.collapse';\n    var EVENT_KEY = '.' + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $.fn[NAME];\n    var TRANSITION_DURATION = 600;\n\n    var Default = {\n      toggle: true,\n      parent: ''\n    };\n\n    var DefaultType = {\n      toggle: 'boolean',\n      parent: 'string'\n    };\n\n    var Event = {\n      SHOW: 'show' + EVENT_KEY,\n      SHOWN: 'shown' + EVENT_KEY,\n      HIDE: 'hide' + EVENT_KEY,\n      HIDDEN: 'hidden' + EVENT_KEY,\n      CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n    };\n\n    var ClassName = {\n      IN: 'in',\n      COLLAPSE: 'collapse',\n      COLLAPSING: 'collapsing',\n      COLLAPSED: 'collapsed'\n    };\n\n    var Dimension = {\n      WIDTH: 'width',\n      HEIGHT: 'height'\n    };\n\n    var Selector = {\n      ACTIVES: '.panel > .in, .panel > .collapsing',\n      DATA_TOGGLE: '[data-toggle=\"collapse\"]'\n    };\n\n    /**\n     * ------------------------------------------------------------------------\n     * Class Definition\n     * ------------------------------------------------------------------------\n     */\n\n    var Collapse = (function () {\n      function Collapse(element, config) {\n        _classCallCheck(this, Collapse);\n\n        this._isTransitioning = false;\n        this._element = element;\n        this._config = this._getConfig(config);\n        this._triggerArray = $.makeArray($('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' + ('[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')));\n\n        this._parent = this._config.parent ? this._getParent() : null;\n\n        if (!this._config.parent) {\n          this._addAriaAndCollapsedClass(this._element, this._triggerArray);\n        }\n\n        if (this._config.toggle) {\n          this.toggle();\n        }\n      }\n\n      /**\n       * ------------------------------------------------------------------------\n       * Data Api implementation\n       * ------------------------------------------------------------------------\n       */\n\n      // getters\n\n      _createClass(Collapse, [{\n        key: 'toggle',\n\n        // public\n\n        value: function toggle() {\n          if ($(this._element).hasClass(ClassName.IN)) {\n            this.hide();\n          } else {\n            this.show();\n          }\n        }\n      }, {\n        key: 'show',\n        value: function show() {\n          var _this = this;\n\n          if (this._isTransitioning || $(this._element).hasClass(ClassName.IN)) {\n            return;\n          }\n\n          var actives = undefined;\n          var activesData = undefined;\n\n          if (this._parent) {\n            actives = $.makeArray($(Selector.ACTIVES));\n            if (!actives.length) {\n              actives = null;\n            }\n          }\n\n          if (actives) {\n            activesData = $(actives).data(DATA_KEY);\n            if (activesData && activesData._isTransitioning) {\n              return;\n            }\n          }\n\n          var startEvent = $.Event(Event.SHOW);\n          $(this._element).trigger(startEvent);\n          if (startEvent.isDefaultPrevented()) {\n            return;\n          }\n\n          if (actives) {\n            Collapse._jQueryInterface.call($(actives), 'hide');\n            if (!activesData) {\n              $(actives).data(DATA_KEY, null);\n            }\n          }\n\n          var dimension = this._getDimension();\n\n          $(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);\n\n          this._element.style[dimension] = 0;\n          this._element.setAttribute('aria-expanded', true);\n\n          if (this._triggerArray.length) {\n            $(this._triggerArray).removeClass(ClassName.COLLAPSED).attr('aria-expanded', true);\n          }\n\n          this.setTransitioning(true);\n\n          var complete = function complete() {\n            $(_this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.IN);\n\n            _this._element.style[dimension] = '';\n\n            _this.setTransitioning(false);\n\n            $(_this._element).trigger(Event.SHOWN);\n          };\n\n          if (!_Util['default'].supportsTransitionEnd()) {\n            complete();\n            return;\n          }\n\n          var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n          var scrollSize = 'scroll' + capitalizedDimension;\n\n          $(this._element).one(_Util['default'].TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\n\n          this._element.style[dimension] = this._element[scrollSize] + 'px';\n        }\n      }, {\n        key: 'hide',\n        value: function hide() {\n          var _this2 = this;\n\n          if (this._isTransitioning || !$(this._element).hasClass(ClassName.IN)) {\n            return;\n          }\n\n          var startEvent = $.Event(Event.HIDE);\n          $(this._element).trigger(startEvent);\n          if (startEvent.isDefaultPrevented()) {\n            return;\n          }\n\n          var dimension = this._getDimension();\n          var offsetDimension = dimension === Dimension.WIDTH ? 'offsetWidth' : 'offsetHeight';\n\n          this._element.style[dimension] = this._element[offsetDimension] + 'px';\n\n          _Util['default'].reflow(this._element);\n\n          $(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.IN);\n\n          this._element.setAttribute('aria-expanded', false);\n\n          if (this._triggerArray.length) {\n            $(this._triggerArray).addClass(ClassName.COLLAPSED).attr('aria-expanded', false);\n          }\n\n          this.setTransitioning(true);\n\n          var complete = function complete() {\n            _this2.setTransitioning(false);\n            $(_this2._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);\n          };\n\n          this._element.style[dimension] = 0;\n\n          if (!_Util['default'].supportsTransitionEnd()) {\n            complete();\n            return;\n          }\n\n          $(this._element).one(_Util['default'].TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\n        }\n      }, {\n        key: 'setTransitioning',\n        value: function setTransitioning(isTransitioning) {\n          this._isTransitioning = isTransitioning;\n        }\n      }, {\n        key: 'dispose',\n        value: function dispose() {\n          $.removeData(this._element, DATA_KEY);\n\n          this._config = null;\n          this._parent = null;\n          this._element = null;\n          this._triggerArray = null;\n          this._isTransitioning = null;\n        }\n\n        // private\n\n      }, {\n        key: '_getConfig',\n        value: function _getConfig(config) {\n          config = $.extend({}, Default, config);\n          config.toggle = Boolean(config.toggle); // coerce string values\n          _Util['default'].typeCheckConfig(NAME, config, DefaultType);\n          return config;\n        }\n      }, {\n        key: '_getDimension',\n        value: function _getDimension() {\n          var hasWidth = $(this._element).hasClass(Dimension.WIDTH);\n          return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;\n        }\n      }, {\n        key: '_getParent',\n        value: function _getParent() {\n          var _this3 = this;\n\n          var parent = $(this._config.parent)[0];\n          var selector = '[data-toggle=\"collapse\"][data-parent=\"' + this._config.parent + '\"]';\n\n          $(parent).find(selector).each(function (i, element) {\n            _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);\n          });\n\n          return parent;\n        }\n      }, {\n        key: '_addAriaAndCollapsedClass',\n        value: function _addAriaAndCollapsedClass(element, triggerArray) {\n          if (element) {\n            var isOpen = $(element).hasClass(ClassName.IN);\n            element.setAttribute('aria-expanded', isOpen);\n\n            if (triggerArray.length) {\n              $(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);\n            }\n          }\n        }\n\n        // static\n\n      }], [{\n        key: '_getTargetFromElement',\n        value: function _getTargetFromElement(element) {\n          var selector = _Util['default'].getSelectorFromElement(element);\n          return selector ? $(selector)[0] : null;\n        }\n      }, {\n        key: '_jQueryInterface',\n        value: function _jQueryInterface(config) {\n          return this.each(function () {\n            var $this = $(this);\n            var data = $this.data(DATA_KEY);\n            var _config = $.extend({}, Default, $this.data(), typeof config === 'object' && config);\n\n            if (!data && _config.toggle && /show|hide/.test(config)) {\n              _config.toggle = false;\n            }\n\n            if (!data) {\n              data = new Collapse(this, _config);\n              $this.data(DATA_KEY, data);\n            }\n\n            if (typeof config === 'string') {\n              if (data[config] === undefined) {\n                throw new Error('No method named \"' + config + '\"');\n              }\n              data[config]();\n            }\n          });\n        }\n      }, {\n        key: 'VERSION',\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: 'Default',\n        get: function get() {\n          return Default;\n        }\n      }]);\n\n      return Collapse;\n    })();\n\n    $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n      event.preventDefault();\n\n      var target = Collapse._getTargetFromElement(this);\n      var data = $(target).data(DATA_KEY);\n      var config = data ? 'toggle' : $(this).data();\n\n      Collapse._jQueryInterface.call($(target), config);\n    });\n\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $.fn[NAME] = Collapse._jQueryInterface;\n    $.fn[NAME].Constructor = Collapse;\n    $.fn[NAME].noConflict = function () {\n      $.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Collapse._jQueryInterface;\n    };\n\n    return Collapse;\n  })(jQuery);\n\n  module.exports = Collapse;\n});\n","(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod);\n    global.util = mod.exports;\n  }\n})(this, function (exports, module) {\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.0.0-alpha.2): util.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  'use strict';\n\n  var Util = (function ($) {\n\n    /**\n     * ------------------------------------------------------------------------\n     * Private TransitionEnd Helpers\n     * ------------------------------------------------------------------------\n     */\n\n    var transition = false;\n\n    var TransitionEndEvent = {\n      WebkitTransition: 'webkitTransitionEnd',\n      MozTransition: 'transitionend',\n      OTransition: 'oTransitionEnd otransitionend',\n      transition: 'transitionend'\n    };\n\n    // shoutout AngusCroll (https://goo.gl/pxwQGp)\n    function toType(obj) {\n      return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n    }\n\n    function isElement(obj) {\n      return (obj[0] || obj).nodeType;\n    }\n\n    function getSpecialTransitionEndEvent() {\n      return {\n        bindType: transition.end,\n        delegateType: transition.end,\n        handle: function handle(event) {\n          if ($(event.target).is(this)) {\n            return event.handleObj.handler.apply(this, arguments);\n          }\n        }\n      };\n    }\n\n    function transitionEndTest() {\n      if (window.QUnit) {\n        return false;\n      }\n\n      var el = document.createElement('bootstrap');\n\n      for (var _name in TransitionEndEvent) {\n        if (el.style[_name] !== undefined) {\n          return { end: TransitionEndEvent[_name] };\n        }\n      }\n\n      return false;\n    }\n\n    function transitionEndEmulator(duration) {\n      var _this = this;\n\n      var called = false;\n\n      $(this).one(Util.TRANSITION_END, function () {\n        called = true;\n      });\n\n      setTimeout(function () {\n        if (!called) {\n          Util.triggerTransitionEnd(_this);\n        }\n      }, duration);\n\n      return this;\n    }\n\n    function setTransitionEndSupport() {\n      transition = transitionEndTest();\n\n      $.fn.emulateTransitionEnd = transitionEndEmulator;\n\n      if (Util.supportsTransitionEnd()) {\n        $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\n      }\n    }\n\n    /**\n     * --------------------------------------------------------------------------\n     * Public Util Api\n     * --------------------------------------------------------------------------\n     */\n\n    var Util = {\n\n      TRANSITION_END: 'bsTransitionEnd',\n\n      getUID: function getUID(prefix) {\n        do {\n          prefix += ~ ~(Math.random() * 1000000); // \"~~\" acts like a faster Math.floor() here\n        } while (document.getElementById(prefix));\n        return prefix;\n      },\n\n      getSelectorFromElement: function getSelectorFromElement(element) {\n        var selector = element.getAttribute('data-target');\n\n        if (!selector) {\n          selector = element.getAttribute('href') || '';\n          selector = /^#[a-z]/i.test(selector) ? selector : null;\n        }\n\n        return selector;\n      },\n\n      reflow: function reflow(element) {\n        new Function('bs', 'return bs')(element.offsetHeight);\n      },\n\n      triggerTransitionEnd: function triggerTransitionEnd(element) {\n        $(element).trigger(transition.end);\n      },\n\n      supportsTransitionEnd: function supportsTransitionEnd() {\n        return Boolean(transition);\n      },\n\n      typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {\n        for (var property in configTypes) {\n          if (configTypes.hasOwnProperty(property)) {\n            var expectedTypes = configTypes[property];\n            var value = config[property];\n            var valueType = undefined;\n\n            if (value && isElement(value)) {\n              valueType = 'element';\n            } else {\n              valueType = toType(value);\n            }\n\n            if (!new RegExp(expectedTypes).test(valueType)) {\n              throw new Error(componentName.toUpperCase() + ': ' + ('Option \"' + property + '\" provided type \"' + valueType + '\" ') + ('but expected type \"' + expectedTypes + '\".'));\n            }\n          }\n        }\n      }\n    };\n\n    setTransitionEndSupport();\n\n    return Util;\n  })(jQuery);\n\n  module.exports = Util;\n});\n","/*global module*/\nmodule.exports = ( function( $ ) {\n\n\tvar init,\n\t\ttoggle,\n\t\tclearMenus,\n\t\tmenus = [],\n\t\tdropdown = '.dropdown-menu',\n\t\ttriggerSelector = '[data-toggle=\"dropdown-nested\"]';\n\n\t/**\n\t * Init Function\n\t */\n\tinit = function() {\n\t\tvar dropdownTrigger = $( '<button>', {\n\t\t\t'class': 'dropdown-trigger',\n\t\t\t'data-toggle': 'dropdown-nested'\n\t\t} );\n\n\t\t$.each( $( triggerSelector ), function() {\n\t\t\tmenus.push( $( $( this ).data( 'target' ) ) );\n\t\t} );\n\n\t\t$.each( $( dropdown ), function() {\n\t\t\t$( this ).before( dropdownTrigger.clone() );\n\t\t\tmenus.push( $( this ) );\n\t\t} );\n\n\t\t$( document )\n\t\t\t.on( 'click', triggerSelector, toggle )\n\t\t\t.on( 'click', clearMenus );\n\t};\n\n\t/**\n\t * Toggle dropdown\n\t */\n\ttoggle = function( event ) {\n\t\tvar trigger = $( event.currentTarget );\n\t\tvar menu = trigger.siblings( 'ul' );\n\t\tif ( trigger.data( 'target' ) ) {\n\t\t\tmenu = $( trigger.data( 'target' ) );\n\t\t}\n\t\tif ( menu.hasClass( 'open' ) ) {\n\t\t\ttrigger.removeClass( 'active' );\n\t\t\tmenu.removeClass( 'open' );\n\t\t} else {\n\n\t\t\t// Close the other 2nd level menus if we are opening a new 2nd level menu\n\t\t\tif ( menu.hasClass( 'dropdown-menu' ) ) {\n\t\t\t\t$( '> .dropdown-menu' ).removeClass( 'open' ).siblings( '.dropdown-trigger' ).removeClass( 'active' );\n\t\t\t}\n\t\t\ttrigger.addClass( 'active' );\n\t\t\tmenu.addClass( 'open' );\n\t\t}\n\t};\n\n\t/**\n\t * Clear dropdowns\n\t */\n\tclearMenus = function( event ) {\n\t\tvar target = $( event.target );\n\n\t\tif ( target.is( triggerSelector ) ) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\treturn;\n\t\t}\n\n\t\t$( triggerSelector ).removeClass( 'active' );\n\t\t$.each( menus, function() {\n\t\t\t$( this ).removeClass( 'open' );\n\t\t} );\n\t};\n\n\t/**\n\t * Initialise\n\t */\n\tinit();\n\n\t/**\n\t * Return public API ( empty )\n\t */\n\treturn {};\n\n} )( jQuery );\n","/*jshint browserify: true, unused: false*/\n/* globals noUiSlider */\n\n(function( $, global, _ ) {\n\n\t'use strict';\n\n\tvar App,\n\t\tDropdownNested = require( './dropdown-nested' ),\n\t\tTabs = require( './tabs' );\n\n\tglobal.Util = require( '../../bower_components/bootstrap/dist/js/umd/util.js' );\n\tglobal.Collapse = require( '../../bower_components/bootstrap/dist/js/umd/collapse.js' );\n\n\tglobal.strat = global.strat || {\n\n\t\t/**\n\t\t * Init Function\n\t\t */\n\t\tinit: function() {\n\t\t\tApp.jsStart();\n\t\t\tApp.initCollapsibleHeader();\n\t\t\tApp.initRevealEffect();\n\t\t\tApp.initImageSlider();\n\t\t\tApp.initLightbox();\n\t\t\tApp.initAccordions();\n\t\t\tApp.initTogglers();\n\t\t\tApp.initSplash();\n\t\t\tApp.printStart();\n\t\t\tApp.initDismissable();\n\t\t\tApp.initRange();\n\t\t\tif ( 'undefined' !== typeof global.strathcomSearch ) {\n\t\t\t\tglobal.strathcomSearch.on( 'filters:render:after', App.initRange );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove nojs fallbacks\n\t\t */\n\t\tjsStart: function() {\n\t\t\t$( 'html' ).removeClass( 'nojs' );\n\t\t},\n\n\t\t/**\n\t\t * Print\n\t\t */\n\t\tprintStart: function() {\n\t\t\t$( '._print' ).click( function( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\twindow.print();\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Initialize range slider\n\t\t */\n\t\tinitRange: function() {\n\t\t\tvar rangeSliderMin, rangeSliderMax, minValue, maxValue,\n\t\t\t\trangeSlider = document.getElementById( 'range-slider' );\n\n\t\t\tif ( 'undefined' === typeof noUiSlider || ! rangeSlider  ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trangeSliderMin = $( '#price_range__gte' );\n\t\t\trangeSliderMax = $( '#price_range__lte' );\n\t\t\tminValue = parseInt( rangeSliderMin.val(), 10 );\n\t\t\tmaxValue = parseInt( rangeSliderMax.val(), 10 );\n\n\t\t\tnoUiSlider.create( rangeSlider, {\n\t\t\t\tstart:   [ minValue, maxValue ],\n\t\t\t\tconnect: true,\n\t\t\t\trange:   {\n\t\t\t\t\t'min': minValue,\n\t\t\t\t\t'max': maxValue\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\trangeSlider.noUiSlider.on( 'update', function( values, handle ) {\n\t\t\t\tvar value = values[ handle ];\n\t\t\t\tvalue     = Math.round( value / 1000 ) * 1000;\n\t\t\t\tif ( handle ) {\n\t\t\t\t\tif ( value < 1000 ) {\n\t\t\t\t\t\tvalue = 1000;\n\t\t\t\t\t}\n\t\t\t\t\trangeSliderMax.val( value );\n\t\t\t\t} else {\n\t\t\t\t\trangeSliderMin.val( value );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\trangeSliderMin.on( 'change', function() {\n\t\t\t\trangeSlider.noUiSlider.set( [ this.value, null ] );\n\t\t\t} );\n\n\t\t\trangeSliderMax.on( 'change', function() {\n\t\t\t\trangeSlider.noUiSlider.set( [ null, this.value ] );\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Site header expand/collapse.\n\t\t */\n\t\tinitCollapsibleHeader: function() {\n\t\t\tvar offset, scrollVal, container, isExpanded,\n\t\t\t\texpandedClass = 'expanded-header',\n\t\t\t\taddBackground = 'add-background',\n\t\t\t\twnd = $( window );\n\n\t\t\t// Trigger feature only on homepage.\n\t\t\tif ( ! $( 'body' ).hasClass( 'home' ) || 0 === $( '.collapsible-header' ).length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toffset = ( $( '.splash' ).height() * 0.66 ) || 650;\n\t\t\tcontainer = $( '.page-wrapper' );\n\t\t\tisExpanded = container.hasClass( expandedClass );\n\n\t\t\t// Throttle event handler function for better performance.\n\t\t\twnd.on( 'scroll', _.throttle( function( event ) {\n\t\t\t\tscrollVal = wnd.scrollTop();\n\n\t\t\t\tif ( isExpanded && scrollVal > offset ) {\n\t\t\t\t\tisExpanded = false;\n\t\t\t\t\tcontainer.removeClass( expandedClass );\n\t\t\t\t\tcontainer.addClass( addBackground );\n\t\t\t\t} else if ( ! isExpanded && scrollVal < offset ) {\n\t\t\t\t\tisExpanded = true;\n\t\t\t\t\tcontainer.addClass( expandedClass );\n\t\t\t\t\tcontainer.removeClass( addBackground );\n\t\t\t\t}\n\t\t\t}, 100 ) );\n\n\t\t\twnd.trigger( 'scroll' );\n\t\t},\n\n\t\t/**\n\t\t * Reveal effect using 'jquery.visible'.\n\t\t */\n\t\tinitRevealEffect: function() {\n\t\t\tvar scrollVal, show,\n\t\t\t\twnd = $( window ),\n\t\t\t\ttargets = [\n\t\t\t\t\t{\n\t\t\t\t\t\tcontainer: $( '.container-slant' ),\n\t\t\t\t\t\tel: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tselector: '.content, figure',\n\t\t\t\t\t\t\t\teffect: 'fade-slide'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\tshow = function( target ) {\n\t\t\t\t_.each( target.el, function( el ) {\n\t\t\t\t\ttarget.container.find( el.selector ).addClass( el.effect );\n\t\t\t\t});\n\t\t\t\ttarget.shown = true;\n\t\t\t};\n\n\t\t\tif ( 'undefined' === typeof jQuery.fn.visible ) {\n\t\t\t\t_.each( targets, function( target ) {\n\t\t\t\t\tshow( target );\n\t\t\t\t});\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Throttle event handler function for better performance.\n\t\t\twnd.on( 'scroll', _.throttle( function() {\n\t\t\t\tscrollVal = wnd.scrollTop();\n\n\t\t\t\t_.each( targets, function( target ) {\n\t\t\t\t\tif ( ! _.isUndefined( target.shown ) && true === target.shown ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif ( target.container.visible( true ) ) {\n\t\t\t\t\t\tshow( target );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 100 ) );\n\n\t\t\twnd.trigger( 'scroll' );\n\t\t},\n\n\t\t/**\n\t\t * Initialise image sliders and carousels\n\t\t */\n\t\tinitImageSlider: function() {\n\t\t\t$.each( $( '[data-toggle=\"product-carousel\"]' ), function() {\n\t\t\t\tvar commonConfig, carouselConfig, sliderConfig, size, getGridSize, setGridSize, refreshFlexslider,\n\t\t\t\t\tcontainer   = $( this ),\n\t\t\t\t\tslider      = container.find( '.image-slider' ),\n\t\t\t\t\tcarousel    = container.find( '.image-carousel' ),\n\t\t\t\t\thasSlider   = ( 0 !== slider.length ),\n\t\t\t\t\thasCarousel = ( 0 !== carousel.length );\n\n\t\t\t\t// Define common config.\n\t\t\t\tcommonConfig = {\n\t\t\t\t\tnamespace:     'carousel-',\n\t\t\t\t\tselector:      '.slides > li',\n\t\t\t\t\tanimation:     'slide',\n\t\t\t\t\tcontrolNav:    false,\n\t\t\t\t\tanimationLoop: false,\n\t\t\t\t\tslideshow:     false,\n\t\t\t\t\ttouch:         true\n\t\t\t\t};\n\n\t\t\t\t// Extend common config with specific settings for each slider type.\n\t\t\t\tif ( hasCarousel ) {\n\t\t\t\t\tgetGridSize = function() {\n\t\t\t\t\t\tvar gridSize = Number( carousel.data( 'grid-size' ) );\n\n\t\t\t\t\t\tif ( 600 > carousel.width() ) {\n\t\t\t\t\t\t\treturn Math.ceil( gridSize / 4 );\n\t\t\t\t\t\t} else if ( 900 > carousel.width() ) {\n\t\t\t\t\t\t\treturn Math.ceil( gridSize / 2 );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn gridSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tsetGridSize = function() {\n\t\t\t\t\t\tvar gridSize = getGridSize();\n\n\t\t\t\t\t\tcarousel.data( 'flexslider' ).vars.minItems = gridSize;\n\t\t\t\t\t\tcarousel.data( 'flexslider' ).vars.maxItems = gridSize;\n\t\t\t\t\t\tcarousel.flexslider( 0 );\n\t\t\t\t\t};\n\n\t\t\t\t\tsize = getGridSize();\n\t\t\t\t\tcarouselConfig = $.extend( {}, commonConfig, {\n\t\t\t\t\t\titemWidth:  120,\n\t\t\t\t\t\titemMargin: 0,\n\t\t\t\t\t\tminItems:   size,\n\t\t\t\t\t\tmaxItems:   size\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tif ( hasSlider ) {\n\t\t\t\t\tsliderConfig = $.extend( {}, commonConfig, {} );\n\t\t\t\t}\n\n\t\t\t\t// Sync carousel and slider if they are both present.\n\t\t\t\tif ( hasCarousel && hasSlider ) {\n\t\t\t\t\tcarouselConfig.asNavFor = slider;\n\t\t\t\t\tsliderConfig.sync = carousel;\n\t\t\t\t}\n\n\t\t\t\trefreshFlexslider = function( e ) {\n\t\t\t\t\tvar instance = e.data.instance.data( 'flexslider' ),\n\t\t\t\t\t\tcurrentItem = instance.currentItem;\n\n\t\t\t\t\tinstance.setup();\n\t\t\t\t\tinstance.flexslider( currentItem );\n\t\t\t\t};\n\n\t\t\t\t// Initialise flexslider.\n\t\t\t\tif ( hasSlider ) {\n\t\t\t\t\tslider.flexslider( sliderConfig );\n\t\t\t\t\tslider.closest( '.tab-pane' ).one( 'pane:focus', { instance: slider }, refreshFlexslider );\n\t\t\t\t}\n\n\t\t\t\tif ( hasCarousel ) {\n\t\t\t\t\tcarousel.flexslider( carouselConfig );\n\t\t\t\t\tcarousel.closest( '.tab-pane' ).one( 'pane:focus', { instance: carousel }, refreshFlexslider );\n\t\t\t\t\t$( window ).on( 'resize', _.throttle( setGridSize, 100 ) );\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Initialise lightbox\n\t\t */\n\t\tinitLightbox: function() {\n\t\t\tglobal.baguetteBox.run( '[data-lightbox]' );\n\t\t},\n\n\t\t/**\n\t\t * Initialise accordions\n\t\t */\n\t\tinitAccordions: function() {\n\t\t\tvar accordionTriggers = '.filters dt';\n\t\t\tvar accordionWrapper = $( '.filters-panel' );\n\t\t\taccordionWrapper.on( 'click', accordionTriggers, function( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\t$( this ).toggleClass( 'state-closed' );\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Initialise togglers\n\t\t */\n\t\tinitTogglers: function() {\n\t\t\tvar togglerTriggers = $( '[data-toggled]' );\n\t\t\ttogglerTriggers.on( ' click', function( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\t$( $( this ).data( 'toggled' ) ).toggleClass( 'state-toggled' );\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Set splash height and control video playback and visibility on scroll.\n\t\t */\n\t\tinitSplash: function() {\n\t\t\tvar offset, top, toggleVideo, setOffset, controlVideo,\n\t\t\t\tvideo = null,\n\t\t\t\tisPaused = false,\n\t\t\t\tsplash = $( '.splash' ),\n\t\t\t\tisVideoSplash = false,\n\t\t\t\twrapper = $( '.page-wrapper' ),\n\t\t\t\theader = $( '.site-header' ),\n\t\t\t\twnd = $( window );\n\n\t\t\t// Trigger feature only for splash with video background.\n\t\t\tif ( 0 === splash.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tisVideoSplash = splash.hasClass( 'splash-video' ) && 0 !== splash.find( 'iframe' ).length;\n\n\t\t\t// Control YouTube video using its API methods.\n\t\t\tcontrolVideo = function( cmd, args ) {\n\t\t\t\tif ( _.isUndefined( global.strathcomVideoSplashPlayer ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ( _.isNull( video ) ) {\n\t\t\t\t\tvideo = global.strathcomVideoSplashPlayer;\n\t\t\t\t}\n\t\t\t\tif ( 'play' === cmd ) {\n\t\t\t\t\tvideo.playVideo();\n\t\t\t\t} else if ( 'pause' === cmd ) {\n\t\t\t\t\tvideo.pauseVideo();\n\t\t\t\t} else if ( 'setSize' === cmd ) {\n\t\t\t\t\tvideo.setSize( 16 / 9 * args.height, args.height );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Control video playback and visibility on page scroll.\n\t\t\ttoggleVideo = function() {\n\t\t\t\tvar scrollVal = wnd.scrollTop(),\n\t\t\t\t\tinViewport = ( scrollVal >= top && scrollVal <= top + offset ) || ( scrollVal <= top && scrollVal + offset >= top );\n\n\t\t\t\tif ( ! isPaused && ! inViewport ) {\n\t\t\t\t\tisPaused = true;\n\t\t\t\t\tcontrolVideo( 'pause' );\n\t\t\t\t\tsplash.css( 'visibility', 'hidden' );\n\t\t\t\t} else if ( isPaused && inViewport ) {\n\t\t\t\t\tisPaused = false;\n\t\t\t\t\tcontrolVideo( 'play' );\n\t\t\t\t\tsplash.css( 'visibility', '' );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Determine and set splash height (offset for scroll) on resize.\n\t\t\tsetOffset = function() {\n\t\t\t\toffset = wnd.height();\n\t\t\t\ttop = splash.offset().top;\n\t\t\t\tif ( ! wrapper.hasClass( 'expanded-header' ) ) {\n\t\t\t\t\toffset = offset - header.outerHeight();\n\t\t\t\t}\n\n\t\t\t\t//Splash.height( offset );\n\t\t\t\tif ( isVideoSplash ) {\n\t\t\t\t\tcontrolVideo( 'setSize', { height: offset } );\n\t\t\t\t\ttoggleVideo();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetOffset();\n\n\t\t\t// Throttle expensive functions for better performance.\n\t\t\twnd.on( 'resize', _.throttle( setOffset, 100 ) );\n\t\t\tif ( isVideoSplash ) {\n\t\t\t\twnd.on( 'scroll', _.throttle( toggleVideo, 100 ) );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Initialise dismiss-able notifications.\n\t\t */\n\t\tinitDismissable: function() {\n\t\t\t_.each( $( '[data-trigger=\"dismiss\"]' ), function( notification ) {\n\t\t\t\tvar hideNotification,\n\t\t\t\t\t$el          = $( notification ),\n\t\t\t\t\ttoggle       = $el.find( '[data-toggle=\"dismiss\"]' ),\n\t\t\t\t\tdismissAfter = $el.data( 'dismiss-after' );\n\n\t\t\t\t/**\n\t\t\t\t * Hide notification.\n\t\t\t\t * @param {Event} e\n\t\t\t\t */\n\t\t\t\thideNotification = function( e ) {\n\t\t\t\t\tif ( ! _.isUndefined( e ) ) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\t$el.fadeOut( 360 );\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * Listen for click event only once.\n\t\t\t\t */\n\t\t\t\ttoggle.one( 'click', hideNotification );\n\n\t\t\t\t/**\n\t\t\t\t * If notification is to be dismissed automatically, add delay.\n\t\t\t\t */\n\t\t\t\tif ( ! _.isUndefined( dismissAfter ) && 0 < dismissAfter ) {\n\t\t\t\t\t_.delay( hideNotification, dismissAfter );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\t};\n\n\tApp = global.strat;\n\n\t$(function() {\n\t\tApp.init();\n\t});\n\n})( jQuery, window, window._ );\n","/*global module*/\nmodule.exports = ( function( $, global, _ ) {\n\n\tvar activeClass = 'active',\n\t\tcontainerSelector = '[ data-toggle=\"tabs\" ]',\n\t\tnavSelector = '.tabs-nav a',\n\t\tcontentSelector = '.tabs-content',\n\t\tpaneSelector = '.tab-pane';\n\n\t/**\n\t * Initialise tabs.\n\t */\n\tfunction initialise( container ) {\n\t\tvar activeTab, tabs = {};\n\n\t\ttabs.container = container;\n\t\ttabs.nav = container.find( navSelector ),\n\t\ttabs.content = container.find( contentSelector );\n\t\ttabs.panes = tabs.content.find( paneSelector );\n\n\t\ttry {\n\t\t\tif ( _.isUndefined( tabs.nav ) || 0 === tabs.nav.length ) {\n\t\t\t\tthrow new Error( 'Tabs: Could not initialise; there is no tabs navigation.' );\n\t\t\t}\n\t\t\tif ( _.isUndefined( tabs.panes ) || 0 === tabs.panes.length ) {\n\t\t\t\tthrow new Error( 'Tabs: Could not initialise; there are no panes.' );\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\twindow.console.error( e );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( '' !== document.location.hash ) {\n\t\t\tactiveTab = tabs.nav.filter( '[href=\"' + document.location.hash + '\"]' );\n\t\t}\n\n\t\tif ( 'undefined' === typeof activeTab || 0 === activeTab.length ) {\n\t\t\tactiveTab = tabs.nav.filter( '.' + activeClass );\n\t\t}\n\n\t\tif ( 0 === activeTab.length ) {\n\t\t\tactiveTab = tabs.nav;\n\t\t}\n\t\tactiveTab = activeTab.first();\n\t\ttoggle( activeTab, tabs );\n\n\t\tcontainer.on( 'click', navSelector, function( e ) {\n\t\t\te.preventDefault();\n\t\t\twindow.location.hash = e.target.hash;\n\t\t\ttoggle( $( e.target ), tabs );\n\t\t} );\n\t}\n\n\t/**\n\t * Toggle tab.\n\t */\n\tfunction toggle( tab, tabs ) {\n\t\tvar pane = tabs.panes.filter( tab.attr( 'href' ) );\n\n\t\ttabs.nav.removeClass( activeClass );\n\t\ttab.addClass( activeClass );\n\t\ttab.trigger( 'tab:focus' );\n\n\t\ttabs.panes.removeClass( activeClass );\n\t\tpane.addClass( activeClass );\n\t\tpane.trigger( 'pane:focus' );\n\t}\n\n\t$.each( $( containerSelector ), function() {\n\t\tinitialise( $( this ) );\n\t} );\n\n\t/**\n\t * Return public API (empty).\n\t */\n\treturn {};\n\n} )( jQuery, window, window._ );\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJib3dlcl9jb21wb25lbnRzL2Jvb3RzdHJhcC9kaXN0L2pzL3VtZC9jb2xsYXBzZS5qcyIsImJvd2VyX2NvbXBvbmVudHMvYm9vdHN0cmFwL2Rpc3QvanMvdW1kL3V0aWwuanMiLCJzcmMvanMvZHJvcGRvd24tbmVzdGVkLmpzIiwic3JjL2pzL21haW4uanMiLCJzcmMvanMvdGFicy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMvWEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM1S0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcGFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoWydleHBvcnRzJywgJ21vZHVsZScsICcuL3V0aWwnXSwgZmFjdG9yeSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgZmFjdG9yeShleHBvcnRzLCBtb2R1bGUsIHJlcXVpcmUoJy4vdXRpbCcpKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbW9kID0ge1xuICAgICAgZXhwb3J0czoge31cbiAgICB9O1xuICAgIGZhY3RvcnkobW9kLmV4cG9ydHMsIG1vZCwgZ2xvYmFsLlV0aWwpO1xuICAgIGdsb2JhbC5jb2xsYXBzZSA9IG1vZC5leHBvcnRzO1xuICB9XG59KSh0aGlzLCBmdW5jdGlvbiAoZXhwb3J0cywgbW9kdWxlLCBfdXRpbCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgdmFyIF9jcmVhdGVDbGFzcyA9IChmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoJ3ZhbHVlJyBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSkoKTtcblxuICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbiAgZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCdDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24nKTsgfSB9XG5cbiAgdmFyIF9VdGlsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdXRpbCk7XG5cbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIEJvb3RzdHJhcCAodjQuMC4wLWFscGhhLjIpOiBjb2xsYXBzZS5qc1xuICAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuICB2YXIgQ29sbGFwc2UgPSAoZnVuY3Rpb24gKCQpIHtcblxuICAgIC8qKlxuICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAqIENvbnN0YW50c1xuICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAqL1xuXG4gICAgdmFyIE5BTUUgPSAnY29sbGFwc2UnO1xuICAgIHZhciBWRVJTSU9OID0gJzQuMC4wLWFscGhhJztcbiAgICB2YXIgREFUQV9LRVkgPSAnYnMuY29sbGFwc2UnO1xuICAgIHZhciBFVkVOVF9LRVkgPSAnLicgKyBEQVRBX0tFWTtcbiAgICB2YXIgREFUQV9BUElfS0VZID0gJy5kYXRhLWFwaSc7XG4gICAgdmFyIEpRVUVSWV9OT19DT05GTElDVCA9ICQuZm5bTkFNRV07XG4gICAgdmFyIFRSQU5TSVRJT05fRFVSQVRJT04gPSA2MDA7XG5cbiAgICB2YXIgRGVmYXVsdCA9IHtcbiAgICAgIHRvZ2dsZTogdHJ1ZSxcbiAgICAgIHBhcmVudDogJydcbiAgICB9O1xuXG4gICAgdmFyIERlZmF1bHRUeXBlID0ge1xuICAgICAgdG9nZ2xlOiAnYm9vbGVhbicsXG4gICAgICBwYXJlbnQ6ICdzdHJpbmcnXG4gICAgfTtcblxuICAgIHZhciBFdmVudCA9IHtcbiAgICAgIFNIT1c6ICdzaG93JyArIEVWRU5UX0tFWSxcbiAgICAgIFNIT1dOOiAnc2hvd24nICsgRVZFTlRfS0VZLFxuICAgICAgSElERTogJ2hpZGUnICsgRVZFTlRfS0VZLFxuICAgICAgSElEREVOOiAnaGlkZGVuJyArIEVWRU5UX0tFWSxcbiAgICAgIENMSUNLX0RBVEFfQVBJOiAnY2xpY2snICsgRVZFTlRfS0VZICsgREFUQV9BUElfS0VZXG4gICAgfTtcblxuICAgIHZhciBDbGFzc05hbWUgPSB7XG4gICAgICBJTjogJ2luJyxcbiAgICAgIENPTExBUFNFOiAnY29sbGFwc2UnLFxuICAgICAgQ09MTEFQU0lORzogJ2NvbGxhcHNpbmcnLFxuICAgICAgQ09MTEFQU0VEOiAnY29sbGFwc2VkJ1xuICAgIH07XG5cbiAgICB2YXIgRGltZW5zaW9uID0ge1xuICAgICAgV0lEVEg6ICd3aWR0aCcsXG4gICAgICBIRUlHSFQ6ICdoZWlnaHQnXG4gICAgfTtcblxuICAgIHZhciBTZWxlY3RvciA9IHtcbiAgICAgIEFDVElWRVM6ICcucGFuZWwgPiAuaW4sIC5wYW5lbCA+IC5jb2xsYXBzaW5nJyxcbiAgICAgIERBVEFfVE9HR0xFOiAnW2RhdGEtdG9nZ2xlPVwiY29sbGFwc2VcIl0nXG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAqIENsYXNzIERlZmluaXRpb25cbiAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgKi9cblxuICAgIHZhciBDb2xsYXBzZSA9IChmdW5jdGlvbiAoKSB7XG4gICAgICBmdW5jdGlvbiBDb2xsYXBzZShlbGVtZW50LCBjb25maWcpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENvbGxhcHNlKTtcblxuICAgICAgICB0aGlzLl9pc1RyYW5zaXRpb25pbmcgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgICAgIHRoaXMuX2NvbmZpZyA9IHRoaXMuX2dldENvbmZpZyhjb25maWcpO1xuICAgICAgICB0aGlzLl90cmlnZ2VyQXJyYXkgPSAkLm1ha2VBcnJheSgkKCdbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXVtocmVmPVwiIycgKyBlbGVtZW50LmlkICsgJ1wiXSwnICsgKCdbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXVtkYXRhLXRhcmdldD1cIiMnICsgZWxlbWVudC5pZCArICdcIl0nKSkpO1xuXG4gICAgICAgIHRoaXMuX3BhcmVudCA9IHRoaXMuX2NvbmZpZy5wYXJlbnQgPyB0aGlzLl9nZXRQYXJlbnQoKSA6IG51bGw7XG5cbiAgICAgICAgaWYgKCF0aGlzLl9jb25maWcucGFyZW50KSB7XG4gICAgICAgICAgdGhpcy5fYWRkQXJpYUFuZENvbGxhcHNlZENsYXNzKHRoaXMuX2VsZW1lbnQsIHRoaXMuX3RyaWdnZXJBcnJheSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5fY29uZmlnLnRvZ2dsZSkge1xuICAgICAgICAgIHRoaXMudG9nZ2xlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAqIERhdGEgQXBpIGltcGxlbWVudGF0aW9uXG4gICAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAqL1xuXG4gICAgICAvLyBnZXR0ZXJzXG5cbiAgICAgIF9jcmVhdGVDbGFzcyhDb2xsYXBzZSwgW3tcbiAgICAgICAga2V5OiAndG9nZ2xlJyxcblxuICAgICAgICAvLyBwdWJsaWNcblxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gdG9nZ2xlKCkge1xuICAgICAgICAgIGlmICgkKHRoaXMuX2VsZW1lbnQpLmhhc0NsYXNzKENsYXNzTmFtZS5JTikpIHtcbiAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnNob3coKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sIHtcbiAgICAgICAga2V5OiAnc2hvdycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBzaG93KCkge1xuICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgICBpZiAodGhpcy5faXNUcmFuc2l0aW9uaW5nIHx8ICQodGhpcy5fZWxlbWVudCkuaGFzQ2xhc3MoQ2xhc3NOYW1lLklOKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHZhciBhY3RpdmVzID0gdW5kZWZpbmVkO1xuICAgICAgICAgIHZhciBhY3RpdmVzRGF0YSA9IHVuZGVmaW5lZDtcblxuICAgICAgICAgIGlmICh0aGlzLl9wYXJlbnQpIHtcbiAgICAgICAgICAgIGFjdGl2ZXMgPSAkLm1ha2VBcnJheSgkKFNlbGVjdG9yLkFDVElWRVMpKTtcbiAgICAgICAgICAgIGlmICghYWN0aXZlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgYWN0aXZlcyA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGFjdGl2ZXMpIHtcbiAgICAgICAgICAgIGFjdGl2ZXNEYXRhID0gJChhY3RpdmVzKS5kYXRhKERBVEFfS0VZKTtcbiAgICAgICAgICAgIGlmIChhY3RpdmVzRGF0YSAmJiBhY3RpdmVzRGF0YS5faXNUcmFuc2l0aW9uaW5nKSB7XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgc3RhcnRFdmVudCA9ICQuRXZlbnQoRXZlbnQuU0hPVyk7XG4gICAgICAgICAgJCh0aGlzLl9lbGVtZW50KS50cmlnZ2VyKHN0YXJ0RXZlbnQpO1xuICAgICAgICAgIGlmIChzdGFydEV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGFjdGl2ZXMpIHtcbiAgICAgICAgICAgIENvbGxhcHNlLl9qUXVlcnlJbnRlcmZhY2UuY2FsbCgkKGFjdGl2ZXMpLCAnaGlkZScpO1xuICAgICAgICAgICAgaWYgKCFhY3RpdmVzRGF0YSkge1xuICAgICAgICAgICAgICAkKGFjdGl2ZXMpLmRhdGEoREFUQV9LRVksIG51bGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHZhciBkaW1lbnNpb24gPSB0aGlzLl9nZXREaW1lbnNpb24oKTtcblxuICAgICAgICAgICQodGhpcy5fZWxlbWVudCkucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lLkNPTExBUFNFKS5hZGRDbGFzcyhDbGFzc05hbWUuQ09MTEFQU0lORyk7XG5cbiAgICAgICAgICB0aGlzLl9lbGVtZW50LnN0eWxlW2RpbWVuc2lvbl0gPSAwO1xuICAgICAgICAgIHRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgdHJ1ZSk7XG5cbiAgICAgICAgICBpZiAodGhpcy5fdHJpZ2dlckFycmF5Lmxlbmd0aCkge1xuICAgICAgICAgICAgJCh0aGlzLl90cmlnZ2VyQXJyYXkpLnJlbW92ZUNsYXNzKENsYXNzTmFtZS5DT0xMQVBTRUQpLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCB0cnVlKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLnNldFRyYW5zaXRpb25pbmcodHJ1ZSk7XG5cbiAgICAgICAgICB2YXIgY29tcGxldGUgPSBmdW5jdGlvbiBjb21wbGV0ZSgpIHtcbiAgICAgICAgICAgICQoX3RoaXMuX2VsZW1lbnQpLnJlbW92ZUNsYXNzKENsYXNzTmFtZS5DT0xMQVBTSU5HKS5hZGRDbGFzcyhDbGFzc05hbWUuQ09MTEFQU0UpLmFkZENsYXNzKENsYXNzTmFtZS5JTik7XG5cbiAgICAgICAgICAgIF90aGlzLl9lbGVtZW50LnN0eWxlW2RpbWVuc2lvbl0gPSAnJztcblxuICAgICAgICAgICAgX3RoaXMuc2V0VHJhbnNpdGlvbmluZyhmYWxzZSk7XG5cbiAgICAgICAgICAgICQoX3RoaXMuX2VsZW1lbnQpLnRyaWdnZXIoRXZlbnQuU0hPV04pO1xuICAgICAgICAgIH07XG5cbiAgICAgICAgICBpZiAoIV9VdGlsWydkZWZhdWx0J10uc3VwcG9ydHNUcmFuc2l0aW9uRW5kKCkpIHtcbiAgICAgICAgICAgIGNvbXBsZXRlKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdmFyIGNhcGl0YWxpemVkRGltZW5zaW9uID0gZGltZW5zaW9uWzBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoMSk7XG4gICAgICAgICAgdmFyIHNjcm9sbFNpemUgPSAnc2Nyb2xsJyArIGNhcGl0YWxpemVkRGltZW5zaW9uO1xuXG4gICAgICAgICAgJCh0aGlzLl9lbGVtZW50KS5vbmUoX1V0aWxbJ2RlZmF1bHQnXS5UUkFOU0lUSU9OX0VORCwgY29tcGxldGUpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKFRSQU5TSVRJT05fRFVSQVRJT04pO1xuXG4gICAgICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZVtkaW1lbnNpb25dID0gdGhpcy5fZWxlbWVudFtzY3JvbGxTaXplXSArICdweCc7XG4gICAgICAgIH1cbiAgICAgIH0sIHtcbiAgICAgICAga2V5OiAnaGlkZScsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBoaWRlKCkge1xuICAgICAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICAgICAgaWYgKHRoaXMuX2lzVHJhbnNpdGlvbmluZyB8fCAhJCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhDbGFzc05hbWUuSU4pKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdmFyIHN0YXJ0RXZlbnQgPSAkLkV2ZW50KEV2ZW50LkhJREUpO1xuICAgICAgICAgICQodGhpcy5fZWxlbWVudCkudHJpZ2dlcihzdGFydEV2ZW50KTtcbiAgICAgICAgICBpZiAoc3RhcnRFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHZhciBkaW1lbnNpb24gPSB0aGlzLl9nZXREaW1lbnNpb24oKTtcbiAgICAgICAgICB2YXIgb2Zmc2V0RGltZW5zaW9uID0gZGltZW5zaW9uID09PSBEaW1lbnNpb24uV0lEVEggPyAnb2Zmc2V0V2lkdGgnIDogJ29mZnNldEhlaWdodCc7XG5cbiAgICAgICAgICB0aGlzLl9lbGVtZW50LnN0eWxlW2RpbWVuc2lvbl0gPSB0aGlzLl9lbGVtZW50W29mZnNldERpbWVuc2lvbl0gKyAncHgnO1xuXG4gICAgICAgICAgX1V0aWxbJ2RlZmF1bHQnXS5yZWZsb3codGhpcy5fZWxlbWVudCk7XG5cbiAgICAgICAgICAkKHRoaXMuX2VsZW1lbnQpLmFkZENsYXNzKENsYXNzTmFtZS5DT0xMQVBTSU5HKS5yZW1vdmVDbGFzcyhDbGFzc05hbWUuQ09MTEFQU0UpLnJlbW92ZUNsYXNzKENsYXNzTmFtZS5JTik7XG5cbiAgICAgICAgICB0aGlzLl9lbGVtZW50LnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsIGZhbHNlKTtcblxuICAgICAgICAgIGlmICh0aGlzLl90cmlnZ2VyQXJyYXkubGVuZ3RoKSB7XG4gICAgICAgICAgICAkKHRoaXMuX3RyaWdnZXJBcnJheSkuYWRkQ2xhc3MoQ2xhc3NOYW1lLkNPTExBUFNFRCkuYXR0cignYXJpYS1leHBhbmRlZCcsIGZhbHNlKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLnNldFRyYW5zaXRpb25pbmcodHJ1ZSk7XG5cbiAgICAgICAgICB2YXIgY29tcGxldGUgPSBmdW5jdGlvbiBjb21wbGV0ZSgpIHtcbiAgICAgICAgICAgIF90aGlzMi5zZXRUcmFuc2l0aW9uaW5nKGZhbHNlKTtcbiAgICAgICAgICAgICQoX3RoaXMyLl9lbGVtZW50KS5yZW1vdmVDbGFzcyhDbGFzc05hbWUuQ09MTEFQU0lORykuYWRkQ2xhc3MoQ2xhc3NOYW1lLkNPTExBUFNFKS50cmlnZ2VyKEV2ZW50LkhJRERFTik7XG4gICAgICAgICAgfTtcblxuICAgICAgICAgIHRoaXMuX2VsZW1lbnQuc3R5bGVbZGltZW5zaW9uXSA9IDA7XG5cbiAgICAgICAgICBpZiAoIV9VdGlsWydkZWZhdWx0J10uc3VwcG9ydHNUcmFuc2l0aW9uRW5kKCkpIHtcbiAgICAgICAgICAgIGNvbXBsZXRlKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJCh0aGlzLl9lbGVtZW50KS5vbmUoX1V0aWxbJ2RlZmF1bHQnXS5UUkFOU0lUSU9OX0VORCwgY29tcGxldGUpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKFRSQU5TSVRJT05fRFVSQVRJT04pO1xuICAgICAgICB9XG4gICAgICB9LCB7XG4gICAgICAgIGtleTogJ3NldFRyYW5zaXRpb25pbmcnLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gc2V0VHJhbnNpdGlvbmluZyhpc1RyYW5zaXRpb25pbmcpIHtcbiAgICAgICAgICB0aGlzLl9pc1RyYW5zaXRpb25pbmcgPSBpc1RyYW5zaXRpb25pbmc7XG4gICAgICAgIH1cbiAgICAgIH0sIHtcbiAgICAgICAga2V5OiAnZGlzcG9zZScsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNwb3NlKCkge1xuICAgICAgICAgICQucmVtb3ZlRGF0YSh0aGlzLl9lbGVtZW50LCBEQVRBX0tFWSk7XG5cbiAgICAgICAgICB0aGlzLl9jb25maWcgPSBudWxsO1xuICAgICAgICAgIHRoaXMuX3BhcmVudCA9IG51bGw7XG4gICAgICAgICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XG4gICAgICAgICAgdGhpcy5fdHJpZ2dlckFycmF5ID0gbnVsbDtcbiAgICAgICAgICB0aGlzLl9pc1RyYW5zaXRpb25pbmcgPSBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gcHJpdmF0ZVxuXG4gICAgICB9LCB7XG4gICAgICAgIGtleTogJ19nZXRDb25maWcnLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gX2dldENvbmZpZyhjb25maWcpIHtcbiAgICAgICAgICBjb25maWcgPSAkLmV4dGVuZCh7fSwgRGVmYXVsdCwgY29uZmlnKTtcbiAgICAgICAgICBjb25maWcudG9nZ2xlID0gQm9vbGVhbihjb25maWcudG9nZ2xlKTsgLy8gY29lcmNlIHN0cmluZyB2YWx1ZXNcbiAgICAgICAgICBfVXRpbFsnZGVmYXVsdCddLnR5cGVDaGVja0NvbmZpZyhOQU1FLCBjb25maWcsIERlZmF1bHRUeXBlKTtcbiAgICAgICAgICByZXR1cm4gY29uZmlnO1xuICAgICAgICB9XG4gICAgICB9LCB7XG4gICAgICAgIGtleTogJ19nZXREaW1lbnNpb24nLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gX2dldERpbWVuc2lvbigpIHtcbiAgICAgICAgICB2YXIgaGFzV2lkdGggPSAkKHRoaXMuX2VsZW1lbnQpLmhhc0NsYXNzKERpbWVuc2lvbi5XSURUSCk7XG4gICAgICAgICAgcmV0dXJuIGhhc1dpZHRoID8gRGltZW5zaW9uLldJRFRIIDogRGltZW5zaW9uLkhFSUdIVDtcbiAgICAgICAgfVxuICAgICAgfSwge1xuICAgICAgICBrZXk6ICdfZ2V0UGFyZW50JyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIF9nZXRQYXJlbnQoKSB7XG4gICAgICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgICAgICB2YXIgcGFyZW50ID0gJCh0aGlzLl9jb25maWcucGFyZW50KVswXTtcbiAgICAgICAgICB2YXIgc2VsZWN0b3IgPSAnW2RhdGEtdG9nZ2xlPVwiY29sbGFwc2VcIl1bZGF0YS1wYXJlbnQ9XCInICsgdGhpcy5fY29uZmlnLnBhcmVudCArICdcIl0nO1xuXG4gICAgICAgICAgJChwYXJlbnQpLmZpbmQoc2VsZWN0b3IpLmVhY2goZnVuY3Rpb24gKGksIGVsZW1lbnQpIHtcbiAgICAgICAgICAgIF90aGlzMy5fYWRkQXJpYUFuZENvbGxhcHNlZENsYXNzKENvbGxhcHNlLl9nZXRUYXJnZXRGcm9tRWxlbWVudChlbGVtZW50KSwgW2VsZW1lbnRdKTtcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIHJldHVybiBwYXJlbnQ7XG4gICAgICAgIH1cbiAgICAgIH0sIHtcbiAgICAgICAga2V5OiAnX2FkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcycsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBfYWRkQXJpYUFuZENvbGxhcHNlZENsYXNzKGVsZW1lbnQsIHRyaWdnZXJBcnJheSkge1xuICAgICAgICAgIGlmIChlbGVtZW50KSB7XG4gICAgICAgICAgICB2YXIgaXNPcGVuID0gJChlbGVtZW50KS5oYXNDbGFzcyhDbGFzc05hbWUuSU4pO1xuICAgICAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCBpc09wZW4pO1xuXG4gICAgICAgICAgICBpZiAodHJpZ2dlckFycmF5Lmxlbmd0aCkge1xuICAgICAgICAgICAgICAkKHRyaWdnZXJBcnJheSkudG9nZ2xlQ2xhc3MoQ2xhc3NOYW1lLkNPTExBUFNFRCwgIWlzT3BlbikuYXR0cignYXJpYS1leHBhbmRlZCcsIGlzT3Blbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gc3RhdGljXG5cbiAgICAgIH1dLCBbe1xuICAgICAgICBrZXk6ICdfZ2V0VGFyZ2V0RnJvbUVsZW1lbnQnLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gX2dldFRhcmdldEZyb21FbGVtZW50KGVsZW1lbnQpIHtcbiAgICAgICAgICB2YXIgc2VsZWN0b3IgPSBfVXRpbFsnZGVmYXVsdCddLmdldFNlbGVjdG9yRnJvbUVsZW1lbnQoZWxlbWVudCk7XG4gICAgICAgICAgcmV0dXJuIHNlbGVjdG9yID8gJChzZWxlY3RvcilbMF0gOiBudWxsO1xuICAgICAgICB9XG4gICAgICB9LCB7XG4gICAgICAgIGtleTogJ19qUXVlcnlJbnRlcmZhY2UnLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gX2pRdWVyeUludGVyZmFjZShjb25maWcpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyk7XG4gICAgICAgICAgICB2YXIgZGF0YSA9ICR0aGlzLmRhdGEoREFUQV9LRVkpO1xuICAgICAgICAgICAgdmFyIF9jb25maWcgPSAkLmV4dGVuZCh7fSwgRGVmYXVsdCwgJHRoaXMuZGF0YSgpLCB0eXBlb2YgY29uZmlnID09PSAnb2JqZWN0JyAmJiBjb25maWcpO1xuXG4gICAgICAgICAgICBpZiAoIWRhdGEgJiYgX2NvbmZpZy50b2dnbGUgJiYgL3Nob3d8aGlkZS8udGVzdChjb25maWcpKSB7XG4gICAgICAgICAgICAgIF9jb25maWcudG9nZ2xlID0gZmFsc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghZGF0YSkge1xuICAgICAgICAgICAgICBkYXRhID0gbmV3IENvbGxhcHNlKHRoaXMsIF9jb25maWcpO1xuICAgICAgICAgICAgICAkdGhpcy5kYXRhKERBVEFfS0VZLCBkYXRhKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGlmIChkYXRhW2NvbmZpZ10gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gbWV0aG9kIG5hbWVkIFwiJyArIGNvbmZpZyArICdcIicpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGRhdGFbY29uZmlnXSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9LCB7XG4gICAgICAgIGtleTogJ1ZFUlNJT04nLFxuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gVkVSU0lPTjtcbiAgICAgICAgfVxuICAgICAgfSwge1xuICAgICAgICBrZXk6ICdEZWZhdWx0JyxcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIERlZmF1bHQ7XG4gICAgICAgIH1cbiAgICAgIH1dKTtcblxuICAgICAgcmV0dXJuIENvbGxhcHNlO1xuICAgIH0pKCk7XG5cbiAgICAkKGRvY3VtZW50KS5vbihFdmVudC5DTElDS19EQVRBX0FQSSwgU2VsZWN0b3IuREFUQV9UT0dHTEUsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgdmFyIHRhcmdldCA9IENvbGxhcHNlLl9nZXRUYXJnZXRGcm9tRWxlbWVudCh0aGlzKTtcbiAgICAgIHZhciBkYXRhID0gJCh0YXJnZXQpLmRhdGEoREFUQV9LRVkpO1xuICAgICAgdmFyIGNvbmZpZyA9IGRhdGEgPyAndG9nZ2xlJyA6ICQodGhpcykuZGF0YSgpO1xuXG4gICAgICBDb2xsYXBzZS5falF1ZXJ5SW50ZXJmYWNlLmNhbGwoJCh0YXJnZXQpLCBjb25maWcpO1xuICAgIH0pO1xuXG4gICAgLyoqXG4gICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICogalF1ZXJ5XG4gICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICovXG5cbiAgICAkLmZuW05BTUVdID0gQ29sbGFwc2UuX2pRdWVyeUludGVyZmFjZTtcbiAgICAkLmZuW05BTUVdLkNvbnN0cnVjdG9yID0gQ29sbGFwc2U7XG4gICAgJC5mbltOQU1FXS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgJC5mbltOQU1FXSA9IEpRVUVSWV9OT19DT05GTElDVDtcbiAgICAgIHJldHVybiBDb2xsYXBzZS5falF1ZXJ5SW50ZXJmYWNlO1xuICAgIH07XG5cbiAgICByZXR1cm4gQ29sbGFwc2U7XG4gIH0pKGpRdWVyeSk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBDb2xsYXBzZTtcbn0pO1xuIiwiKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShbJ2V4cG9ydHMnLCAnbW9kdWxlJ10sIGZhY3RvcnkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJykge1xuICAgIGZhY3RvcnkoZXhwb3J0cywgbW9kdWxlKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbW9kID0ge1xuICAgICAgZXhwb3J0czoge31cbiAgICB9O1xuICAgIGZhY3RvcnkobW9kLmV4cG9ydHMsIG1vZCk7XG4gICAgZ2xvYmFsLnV0aWwgPSBtb2QuZXhwb3J0cztcbiAgfVxufSkodGhpcywgZnVuY3Rpb24gKGV4cG9ydHMsIG1vZHVsZSkge1xuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogQm9vdHN0cmFwICh2NC4wLjAtYWxwaGEuMik6IHV0aWwuanNcbiAgICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG5cbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIHZhciBVdGlsID0gKGZ1bmN0aW9uICgkKSB7XG5cbiAgICAvKipcbiAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgKiBQcml2YXRlIFRyYW5zaXRpb25FbmQgSGVscGVyc1xuICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAqL1xuXG4gICAgdmFyIHRyYW5zaXRpb24gPSBmYWxzZTtcblxuICAgIHZhciBUcmFuc2l0aW9uRW5kRXZlbnQgPSB7XG4gICAgICBXZWJraXRUcmFuc2l0aW9uOiAnd2Via2l0VHJhbnNpdGlvbkVuZCcsXG4gICAgICBNb3pUcmFuc2l0aW9uOiAndHJhbnNpdGlvbmVuZCcsXG4gICAgICBPVHJhbnNpdGlvbjogJ29UcmFuc2l0aW9uRW5kIG90cmFuc2l0aW9uZW5kJyxcbiAgICAgIHRyYW5zaXRpb246ICd0cmFuc2l0aW9uZW5kJ1xuICAgIH07XG5cbiAgICAvLyBzaG91dG91dCBBbmd1c0Nyb2xsIChodHRwczovL2dvby5nbC9weHdRR3ApXG4gICAgZnVuY3Rpb24gdG9UeXBlKG9iaikge1xuICAgICAgcmV0dXJuICh7fSkudG9TdHJpbmcuY2FsbChvYmopLm1hdGNoKC9cXHMoW2EtekEtWl0rKS8pWzFdLnRvTG93ZXJDYXNlKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaXNFbGVtZW50KG9iaikge1xuICAgICAgcmV0dXJuIChvYmpbMF0gfHwgb2JqKS5ub2RlVHlwZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRTcGVjaWFsVHJhbnNpdGlvbkVuZEV2ZW50KCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgYmluZFR5cGU6IHRyYW5zaXRpb24uZW5kLFxuICAgICAgICBkZWxlZ2F0ZVR5cGU6IHRyYW5zaXRpb24uZW5kLFxuICAgICAgICBoYW5kbGU6IGZ1bmN0aW9uIGhhbmRsZShldmVudCkge1xuICAgICAgICAgIGlmICgkKGV2ZW50LnRhcmdldCkuaXModGhpcykpIHtcbiAgICAgICAgICAgIHJldHVybiBldmVudC5oYW5kbGVPYmouaGFuZGxlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0cmFuc2l0aW9uRW5kVGVzdCgpIHtcbiAgICAgIGlmICh3aW5kb3cuUVVuaXQpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICB2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdib290c3RyYXAnKTtcblxuICAgICAgZm9yICh2YXIgX25hbWUgaW4gVHJhbnNpdGlvbkVuZEV2ZW50KSB7XG4gICAgICAgIGlmIChlbC5zdHlsZVtfbmFtZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHJldHVybiB7IGVuZDogVHJhbnNpdGlvbkVuZEV2ZW50W19uYW1lXSB9O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0cmFuc2l0aW9uRW5kRW11bGF0b3IoZHVyYXRpb24pIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHZhciBjYWxsZWQgPSBmYWxzZTtcblxuICAgICAgJCh0aGlzKS5vbmUoVXRpbC5UUkFOU0lUSU9OX0VORCwgZnVuY3Rpb24gKCkge1xuICAgICAgICBjYWxsZWQgPSB0cnVlO1xuICAgICAgfSk7XG5cbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIWNhbGxlZCkge1xuICAgICAgICAgIFV0aWwudHJpZ2dlclRyYW5zaXRpb25FbmQoX3RoaXMpO1xuICAgICAgICB9XG4gICAgICB9LCBkdXJhdGlvbik7XG5cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHNldFRyYW5zaXRpb25FbmRTdXBwb3J0KCkge1xuICAgICAgdHJhbnNpdGlvbiA9IHRyYW5zaXRpb25FbmRUZXN0KCk7XG5cbiAgICAgICQuZm4uZW11bGF0ZVRyYW5zaXRpb25FbmQgPSB0cmFuc2l0aW9uRW5kRW11bGF0b3I7XG5cbiAgICAgIGlmIChVdGlsLnN1cHBvcnRzVHJhbnNpdGlvbkVuZCgpKSB7XG4gICAgICAgICQuZXZlbnQuc3BlY2lhbFtVdGlsLlRSQU5TSVRJT05fRU5EXSA9IGdldFNwZWNpYWxUcmFuc2l0aW9uRW5kRXZlbnQoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAqIFB1YmxpYyBVdGlsIEFwaVxuICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICovXG5cbiAgICB2YXIgVXRpbCA9IHtcblxuICAgICAgVFJBTlNJVElPTl9FTkQ6ICdic1RyYW5zaXRpb25FbmQnLFxuXG4gICAgICBnZXRVSUQ6IGZ1bmN0aW9uIGdldFVJRChwcmVmaXgpIHtcbiAgICAgICAgZG8ge1xuICAgICAgICAgIHByZWZpeCArPSB+IH4oTWF0aC5yYW5kb20oKSAqIDEwMDAwMDApOyAvLyBcIn5+XCIgYWN0cyBsaWtlIGEgZmFzdGVyIE1hdGguZmxvb3IoKSBoZXJlXG4gICAgICAgIH0gd2hpbGUgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHByZWZpeCkpO1xuICAgICAgICByZXR1cm4gcHJlZml4O1xuICAgICAgfSxcblxuICAgICAgZ2V0U2VsZWN0b3JGcm9tRWxlbWVudDogZnVuY3Rpb24gZ2V0U2VsZWN0b3JGcm9tRWxlbWVudChlbGVtZW50KSB7XG4gICAgICAgIHZhciBzZWxlY3RvciA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXRhcmdldCcpO1xuXG4gICAgICAgIGlmICghc2VsZWN0b3IpIHtcbiAgICAgICAgICBzZWxlY3RvciA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdocmVmJykgfHwgJyc7XG4gICAgICAgICAgc2VsZWN0b3IgPSAvXiNbYS16XS9pLnRlc3Qoc2VsZWN0b3IpID8gc2VsZWN0b3IgOiBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHNlbGVjdG9yO1xuICAgICAgfSxcblxuICAgICAgcmVmbG93OiBmdW5jdGlvbiByZWZsb3coZWxlbWVudCkge1xuICAgICAgICBuZXcgRnVuY3Rpb24oJ2JzJywgJ3JldHVybiBicycpKGVsZW1lbnQub2Zmc2V0SGVpZ2h0KTtcbiAgICAgIH0sXG5cbiAgICAgIHRyaWdnZXJUcmFuc2l0aW9uRW5kOiBmdW5jdGlvbiB0cmlnZ2VyVHJhbnNpdGlvbkVuZChlbGVtZW50KSB7XG4gICAgICAgICQoZWxlbWVudCkudHJpZ2dlcih0cmFuc2l0aW9uLmVuZCk7XG4gICAgICB9LFxuXG4gICAgICBzdXBwb3J0c1RyYW5zaXRpb25FbmQ6IGZ1bmN0aW9uIHN1cHBvcnRzVHJhbnNpdGlvbkVuZCgpIHtcbiAgICAgICAgcmV0dXJuIEJvb2xlYW4odHJhbnNpdGlvbik7XG4gICAgICB9LFxuXG4gICAgICB0eXBlQ2hlY2tDb25maWc6IGZ1bmN0aW9uIHR5cGVDaGVja0NvbmZpZyhjb21wb25lbnROYW1lLCBjb25maWcsIGNvbmZpZ1R5cGVzKSB7XG4gICAgICAgIGZvciAodmFyIHByb3BlcnR5IGluIGNvbmZpZ1R5cGVzKSB7XG4gICAgICAgICAgaWYgKGNvbmZpZ1R5cGVzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgICAgICAgICAgdmFyIGV4cGVjdGVkVHlwZXMgPSBjb25maWdUeXBlc1twcm9wZXJ0eV07XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBjb25maWdbcHJvcGVydHldO1xuICAgICAgICAgICAgdmFyIHZhbHVlVHlwZSA9IHVuZGVmaW5lZDtcblxuICAgICAgICAgICAgaWYgKHZhbHVlICYmIGlzRWxlbWVudCh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgdmFsdWVUeXBlID0gJ2VsZW1lbnQnO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdmFsdWVUeXBlID0gdG9UeXBlKHZhbHVlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCFuZXcgUmVnRXhwKGV4cGVjdGVkVHlwZXMpLnRlc3QodmFsdWVUeXBlKSkge1xuICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoY29tcG9uZW50TmFtZS50b1VwcGVyQ2FzZSgpICsgJzogJyArICgnT3B0aW9uIFwiJyArIHByb3BlcnR5ICsgJ1wiIHByb3ZpZGVkIHR5cGUgXCInICsgdmFsdWVUeXBlICsgJ1wiICcpICsgKCdidXQgZXhwZWN0ZWQgdHlwZSBcIicgKyBleHBlY3RlZFR5cGVzICsgJ1wiLicpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgc2V0VHJhbnNpdGlvbkVuZFN1cHBvcnQoKTtcblxuICAgIHJldHVybiBVdGlsO1xuICB9KShqUXVlcnkpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gVXRpbDtcbn0pO1xuIiwiLypnbG9iYWwgbW9kdWxlKi9cbm1vZHVsZS5leHBvcnRzID0gKCBmdW5jdGlvbiggJCApIHtcblxuXHR2YXIgaW5pdCxcblx0XHR0b2dnbGUsXG5cdFx0Y2xlYXJNZW51cyxcblx0XHRtZW51cyA9IFtdLFxuXHRcdGRyb3Bkb3duID0gJy5kcm9wZG93bi1tZW51Jyxcblx0XHR0cmlnZ2VyU2VsZWN0b3IgPSAnW2RhdGEtdG9nZ2xlPVwiZHJvcGRvd24tbmVzdGVkXCJdJztcblxuXHQvKipcblx0ICogSW5pdCBGdW5jdGlvblxuXHQgKi9cblx0aW5pdCA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBkcm9wZG93blRyaWdnZXIgPSAkKCAnPGJ1dHRvbj4nLCB7XG5cdFx0XHQnY2xhc3MnOiAnZHJvcGRvd24tdHJpZ2dlcicsXG5cdFx0XHQnZGF0YS10b2dnbGUnOiAnZHJvcGRvd24tbmVzdGVkJ1xuXHRcdH0gKTtcblxuXHRcdCQuZWFjaCggJCggdHJpZ2dlclNlbGVjdG9yICksIGZ1bmN0aW9uKCkge1xuXHRcdFx0bWVudXMucHVzaCggJCggJCggdGhpcyApLmRhdGEoICd0YXJnZXQnICkgKSApO1xuXHRcdH0gKTtcblxuXHRcdCQuZWFjaCggJCggZHJvcGRvd24gKSwgZnVuY3Rpb24oKSB7XG5cdFx0XHQkKCB0aGlzICkuYmVmb3JlKCBkcm9wZG93blRyaWdnZXIuY2xvbmUoKSApO1xuXHRcdFx0bWVudXMucHVzaCggJCggdGhpcyApICk7XG5cdFx0fSApO1xuXG5cdFx0JCggZG9jdW1lbnQgKVxuXHRcdFx0Lm9uKCAnY2xpY2snLCB0cmlnZ2VyU2VsZWN0b3IsIHRvZ2dsZSApXG5cdFx0XHQub24oICdjbGljaycsIGNsZWFyTWVudXMgKTtcblx0fTtcblxuXHQvKipcblx0ICogVG9nZ2xlIGRyb3Bkb3duXG5cdCAqL1xuXHR0b2dnbGUgPSBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0dmFyIHRyaWdnZXIgPSAkKCBldmVudC5jdXJyZW50VGFyZ2V0ICk7XG5cdFx0dmFyIG1lbnUgPSB0cmlnZ2VyLnNpYmxpbmdzKCAndWwnICk7XG5cdFx0aWYgKCB0cmlnZ2VyLmRhdGEoICd0YXJnZXQnICkgKSB7XG5cdFx0XHRtZW51ID0gJCggdHJpZ2dlci5kYXRhKCAndGFyZ2V0JyApICk7XG5cdFx0fVxuXHRcdGlmICggbWVudS5oYXNDbGFzcyggJ29wZW4nICkgKSB7XG5cdFx0XHR0cmlnZ2VyLnJlbW92ZUNsYXNzKCAnYWN0aXZlJyApO1xuXHRcdFx0bWVudS5yZW1vdmVDbGFzcyggJ29wZW4nICk7XG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gQ2xvc2UgdGhlIG90aGVyIDJuZCBsZXZlbCBtZW51cyBpZiB3ZSBhcmUgb3BlbmluZyBhIG5ldyAybmQgbGV2ZWwgbWVudVxuXHRcdFx0aWYgKCBtZW51Lmhhc0NsYXNzKCAnZHJvcGRvd24tbWVudScgKSApIHtcblx0XHRcdFx0JCggJz4gLmRyb3Bkb3duLW1lbnUnICkucmVtb3ZlQ2xhc3MoICdvcGVuJyApLnNpYmxpbmdzKCAnLmRyb3Bkb3duLXRyaWdnZXInICkucmVtb3ZlQ2xhc3MoICdhY3RpdmUnICk7XG5cdFx0XHR9XG5cdFx0XHR0cmlnZ2VyLmFkZENsYXNzKCAnYWN0aXZlJyApO1xuXHRcdFx0bWVudS5hZGRDbGFzcyggJ29wZW4nICk7XG5cdFx0fVxuXHR9O1xuXG5cdC8qKlxuXHQgKiBDbGVhciBkcm9wZG93bnNcblx0ICovXG5cdGNsZWFyTWVudXMgPSBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0dmFyIHRhcmdldCA9ICQoIGV2ZW50LnRhcmdldCApO1xuXG5cdFx0aWYgKCB0YXJnZXQuaXMoIHRyaWdnZXJTZWxlY3RvciApICkge1xuXHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdCQoIHRyaWdnZXJTZWxlY3RvciApLnJlbW92ZUNsYXNzKCAnYWN0aXZlJyApO1xuXHRcdCQuZWFjaCggbWVudXMsIGZ1bmN0aW9uKCkge1xuXHRcdFx0JCggdGhpcyApLnJlbW92ZUNsYXNzKCAnb3BlbicgKTtcblx0XHR9ICk7XG5cdH07XG5cblx0LyoqXG5cdCAqIEluaXRpYWxpc2Vcblx0ICovXG5cdGluaXQoKTtcblxuXHQvKipcblx0ICogUmV0dXJuIHB1YmxpYyBBUEkgKCBlbXB0eSApXG5cdCAqL1xuXHRyZXR1cm4ge307XG5cbn0gKSggalF1ZXJ5ICk7XG4iLCIvKmpzaGludCBicm93c2VyaWZ5OiB0cnVlLCB1bnVzZWQ6IGZhbHNlKi9cbi8qIGdsb2JhbHMgbm9VaVNsaWRlciAqL1xuXG4oZnVuY3Rpb24oICQsIGdsb2JhbCwgXyApIHtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIEFwcCxcblx0XHREcm9wZG93bk5lc3RlZCA9IHJlcXVpcmUoICcuL2Ryb3Bkb3duLW5lc3RlZCcgKSxcblx0XHRUYWJzID0gcmVxdWlyZSggJy4vdGFicycgKTtcblxuXHRnbG9iYWwuVXRpbCA9IHJlcXVpcmUoICcuLi8uLi9ib3dlcl9jb21wb25lbnRzL2Jvb3RzdHJhcC9kaXN0L2pzL3VtZC91dGlsLmpzJyApO1xuXHRnbG9iYWwuQ29sbGFwc2UgPSByZXF1aXJlKCAnLi4vLi4vYm93ZXJfY29tcG9uZW50cy9ib290c3RyYXAvZGlzdC9qcy91bWQvY29sbGFwc2UuanMnICk7XG5cblx0Z2xvYmFsLnN0cmF0ID0gZ2xvYmFsLnN0cmF0IHx8IHtcblxuXHRcdC8qKlxuXHRcdCAqIEluaXQgRnVuY3Rpb25cblx0XHQgKi9cblx0XHRpbml0OiBmdW5jdGlvbigpIHtcblx0XHRcdEFwcC5qc1N0YXJ0KCk7XG5cdFx0XHRBcHAuaW5pdENvbGxhcHNpYmxlSGVhZGVyKCk7XG5cdFx0XHRBcHAuaW5pdFJldmVhbEVmZmVjdCgpO1xuXHRcdFx0QXBwLmluaXRJbWFnZVNsaWRlcigpO1xuXHRcdFx0QXBwLmluaXRMaWdodGJveCgpO1xuXHRcdFx0QXBwLmluaXRBY2NvcmRpb25zKCk7XG5cdFx0XHRBcHAuaW5pdFRvZ2dsZXJzKCk7XG5cdFx0XHRBcHAuaW5pdFNwbGFzaCgpO1xuXHRcdFx0QXBwLnByaW50U3RhcnQoKTtcblx0XHRcdEFwcC5pbml0RGlzbWlzc2FibGUoKTtcblx0XHRcdEFwcC5pbml0UmFuZ2UoKTtcblx0XHRcdGlmICggJ3VuZGVmaW5lZCcgIT09IHR5cGVvZiBnbG9iYWwuc3RyYXRoY29tU2VhcmNoICkge1xuXHRcdFx0XHRnbG9iYWwuc3RyYXRoY29tU2VhcmNoLm9uKCAnZmlsdGVyczpyZW5kZXI6YWZ0ZXInLCBBcHAuaW5pdFJhbmdlICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8qKlxuXHRcdCAqIFJlbW92ZSBub2pzIGZhbGxiYWNrc1xuXHRcdCAqL1xuXHRcdGpzU3RhcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0JCggJ2h0bWwnICkucmVtb3ZlQ2xhc3MoICdub2pzJyApO1xuXHRcdH0sXG5cblx0XHQvKipcblx0XHQgKiBQcmludFxuXHRcdCAqL1xuXHRcdHByaW50U3RhcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0JCggJy5fcHJpbnQnICkuY2xpY2soIGZ1bmN0aW9uKCBlICkge1xuXHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdHdpbmRvdy5wcmludCgpO1xuXHRcdFx0fSApO1xuXHRcdH0sXG5cblx0XHQvKipcblx0XHQgKiBJbml0aWFsaXplIHJhbmdlIHNsaWRlclxuXHRcdCAqL1xuXHRcdGluaXRSYW5nZTogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgcmFuZ2VTbGlkZXJNaW4sIHJhbmdlU2xpZGVyTWF4LCBtaW5WYWx1ZSwgbWF4VmFsdWUsXG5cdFx0XHRcdHJhbmdlU2xpZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoICdyYW5nZS1zbGlkZXInICk7XG5cblx0XHRcdGlmICggJ3VuZGVmaW5lZCcgPT09IHR5cGVvZiBub1VpU2xpZGVyIHx8ICEgcmFuZ2VTbGlkZXIgICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHJhbmdlU2xpZGVyTWluID0gJCggJyNwcmljZV9yYW5nZV9fZ3RlJyApO1xuXHRcdFx0cmFuZ2VTbGlkZXJNYXggPSAkKCAnI3ByaWNlX3JhbmdlX19sdGUnICk7XG5cdFx0XHRtaW5WYWx1ZSA9IHBhcnNlSW50KCByYW5nZVNsaWRlck1pbi52YWwoKSwgMTAgKTtcblx0XHRcdG1heFZhbHVlID0gcGFyc2VJbnQoIHJhbmdlU2xpZGVyTWF4LnZhbCgpLCAxMCApO1xuXG5cdFx0XHRub1VpU2xpZGVyLmNyZWF0ZSggcmFuZ2VTbGlkZXIsIHtcblx0XHRcdFx0c3RhcnQ6ICAgWyBtaW5WYWx1ZSwgbWF4VmFsdWUgXSxcblx0XHRcdFx0Y29ubmVjdDogdHJ1ZSxcblx0XHRcdFx0cmFuZ2U6ICAge1xuXHRcdFx0XHRcdCdtaW4nOiBtaW5WYWx1ZSxcblx0XHRcdFx0XHQnbWF4JzogbWF4VmFsdWVcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXG5cdFx0XHRyYW5nZVNsaWRlci5ub1VpU2xpZGVyLm9uKCAndXBkYXRlJywgZnVuY3Rpb24oIHZhbHVlcywgaGFuZGxlICkge1xuXHRcdFx0XHR2YXIgdmFsdWUgPSB2YWx1ZXNbIGhhbmRsZSBdO1xuXHRcdFx0XHR2YWx1ZSAgICAgPSBNYXRoLnJvdW5kKCB2YWx1ZSAvIDEwMDAgKSAqIDEwMDA7XG5cdFx0XHRcdGlmICggaGFuZGxlICkge1xuXHRcdFx0XHRcdGlmICggdmFsdWUgPCAxMDAwICkge1xuXHRcdFx0XHRcdFx0dmFsdWUgPSAxMDAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyYW5nZVNsaWRlck1heC52YWwoIHZhbHVlICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cmFuZ2VTbGlkZXJNaW4udmFsKCB2YWx1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cblx0XHRcdHJhbmdlU2xpZGVyTWluLm9uKCAnY2hhbmdlJywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJhbmdlU2xpZGVyLm5vVWlTbGlkZXIuc2V0KCBbIHRoaXMudmFsdWUsIG51bGwgXSApO1xuXHRcdFx0fSApO1xuXG5cdFx0XHRyYW5nZVNsaWRlck1heC5vbiggJ2NoYW5nZScsIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyYW5nZVNsaWRlci5ub1VpU2xpZGVyLnNldCggWyBudWxsLCB0aGlzLnZhbHVlIF0gKTtcblx0XHRcdH0gKTtcblx0XHR9LFxuXG5cdFx0LyoqXG5cdFx0ICogU2l0ZSBoZWFkZXIgZXhwYW5kL2NvbGxhcHNlLlxuXHRcdCAqL1xuXHRcdGluaXRDb2xsYXBzaWJsZUhlYWRlcjogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgb2Zmc2V0LCBzY3JvbGxWYWwsIGNvbnRhaW5lciwgaXNFeHBhbmRlZCxcblx0XHRcdFx0ZXhwYW5kZWRDbGFzcyA9ICdleHBhbmRlZC1oZWFkZXInLFxuXHRcdFx0XHRhZGRCYWNrZ3JvdW5kID0gJ2FkZC1iYWNrZ3JvdW5kJyxcblx0XHRcdFx0d25kID0gJCggd2luZG93ICk7XG5cblx0XHRcdC8vIFRyaWdnZXIgZmVhdHVyZSBvbmx5IG9uIGhvbWVwYWdlLlxuXHRcdFx0aWYgKCAhICQoICdib2R5JyApLmhhc0NsYXNzKCAnaG9tZScgKSB8fCAwID09PSAkKCAnLmNvbGxhcHNpYmxlLWhlYWRlcicgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0b2Zmc2V0ID0gKCAkKCAnLnNwbGFzaCcgKS5oZWlnaHQoKSAqIDAuNjYgKSB8fCA2NTA7XG5cdFx0XHRjb250YWluZXIgPSAkKCAnLnBhZ2Utd3JhcHBlcicgKTtcblx0XHRcdGlzRXhwYW5kZWQgPSBjb250YWluZXIuaGFzQ2xhc3MoIGV4cGFuZGVkQ2xhc3MgKTtcblxuXHRcdFx0Ly8gVGhyb3R0bGUgZXZlbnQgaGFuZGxlciBmdW5jdGlvbiBmb3IgYmV0dGVyIHBlcmZvcm1hbmNlLlxuXHRcdFx0d25kLm9uKCAnc2Nyb2xsJywgXy50aHJvdHRsZSggZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0XHRzY3JvbGxWYWwgPSB3bmQuc2Nyb2xsVG9wKCk7XG5cblx0XHRcdFx0aWYgKCBpc0V4cGFuZGVkICYmIHNjcm9sbFZhbCA+IG9mZnNldCApIHtcblx0XHRcdFx0XHRpc0V4cGFuZGVkID0gZmFsc2U7XG5cdFx0XHRcdFx0Y29udGFpbmVyLnJlbW92ZUNsYXNzKCBleHBhbmRlZENsYXNzICk7XG5cdFx0XHRcdFx0Y29udGFpbmVyLmFkZENsYXNzKCBhZGRCYWNrZ3JvdW5kICk7XG5cdFx0XHRcdH0gZWxzZSBpZiAoICEgaXNFeHBhbmRlZCAmJiBzY3JvbGxWYWwgPCBvZmZzZXQgKSB7XG5cdFx0XHRcdFx0aXNFeHBhbmRlZCA9IHRydWU7XG5cdFx0XHRcdFx0Y29udGFpbmVyLmFkZENsYXNzKCBleHBhbmRlZENsYXNzICk7XG5cdFx0XHRcdFx0Y29udGFpbmVyLnJlbW92ZUNsYXNzKCBhZGRCYWNrZ3JvdW5kICk7XG5cdFx0XHRcdH1cblx0XHRcdH0sIDEwMCApICk7XG5cblx0XHRcdHduZC50cmlnZ2VyKCAnc2Nyb2xsJyApO1xuXHRcdH0sXG5cblx0XHQvKipcblx0XHQgKiBSZXZlYWwgZWZmZWN0IHVzaW5nICdqcXVlcnkudmlzaWJsZScuXG5cdFx0ICovXG5cdFx0aW5pdFJldmVhbEVmZmVjdDogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2Nyb2xsVmFsLCBzaG93LFxuXHRcdFx0XHR3bmQgPSAkKCB3aW5kb3cgKSxcblx0XHRcdFx0dGFyZ2V0cyA9IFtcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRjb250YWluZXI6ICQoICcuY29udGFpbmVyLXNsYW50JyApLFxuXHRcdFx0XHRcdFx0ZWw6IFtcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdHNlbGVjdG9yOiAnLmNvbnRlbnQsIGZpZ3VyZScsXG5cdFx0XHRcdFx0XHRcdFx0ZWZmZWN0OiAnZmFkZS1zbGlkZSdcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XTtcblxuXHRcdFx0c2hvdyA9IGZ1bmN0aW9uKCB0YXJnZXQgKSB7XG5cdFx0XHRcdF8uZWFjaCggdGFyZ2V0LmVsLCBmdW5jdGlvbiggZWwgKSB7XG5cdFx0XHRcdFx0dGFyZ2V0LmNvbnRhaW5lci5maW5kKCBlbC5zZWxlY3RvciApLmFkZENsYXNzKCBlbC5lZmZlY3QgKTtcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHRhcmdldC5zaG93biA9IHRydWU7XG5cdFx0XHR9O1xuXG5cdFx0XHRpZiAoICd1bmRlZmluZWQnID09PSB0eXBlb2YgalF1ZXJ5LmZuLnZpc2libGUgKSB7XG5cdFx0XHRcdF8uZWFjaCggdGFyZ2V0cywgZnVuY3Rpb24oIHRhcmdldCApIHtcblx0XHRcdFx0XHRzaG93KCB0YXJnZXQgKTtcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVGhyb3R0bGUgZXZlbnQgaGFuZGxlciBmdW5jdGlvbiBmb3IgYmV0dGVyIHBlcmZvcm1hbmNlLlxuXHRcdFx0d25kLm9uKCAnc2Nyb2xsJywgXy50aHJvdHRsZSggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHNjcm9sbFZhbCA9IHduZC5zY3JvbGxUb3AoKTtcblxuXHRcdFx0XHRfLmVhY2goIHRhcmdldHMsIGZ1bmN0aW9uKCB0YXJnZXQgKSB7XG5cdFx0XHRcdFx0aWYgKCAhIF8uaXNVbmRlZmluZWQoIHRhcmdldC5zaG93biApICYmIHRydWUgPT09IHRhcmdldC5zaG93biApIHtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCB0YXJnZXQuY29udGFpbmVyLnZpc2libGUoIHRydWUgKSApIHtcblx0XHRcdFx0XHRcdHNob3coIHRhcmdldCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cdFx0XHR9LCAxMDAgKSApO1xuXG5cdFx0XHR3bmQudHJpZ2dlciggJ3Njcm9sbCcgKTtcblx0XHR9LFxuXG5cdFx0LyoqXG5cdFx0ICogSW5pdGlhbGlzZSBpbWFnZSBzbGlkZXJzIGFuZCBjYXJvdXNlbHNcblx0XHQgKi9cblx0XHRpbml0SW1hZ2VTbGlkZXI6IGZ1bmN0aW9uKCkge1xuXHRcdFx0JC5lYWNoKCAkKCAnW2RhdGEtdG9nZ2xlPVwicHJvZHVjdC1jYXJvdXNlbFwiXScgKSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBjb21tb25Db25maWcsIGNhcm91c2VsQ29uZmlnLCBzbGlkZXJDb25maWcsIHNpemUsIGdldEdyaWRTaXplLCBzZXRHcmlkU2l6ZSwgcmVmcmVzaEZsZXhzbGlkZXIsXG5cdFx0XHRcdFx0Y29udGFpbmVyICAgPSAkKCB0aGlzICksXG5cdFx0XHRcdFx0c2xpZGVyICAgICAgPSBjb250YWluZXIuZmluZCggJy5pbWFnZS1zbGlkZXInICksXG5cdFx0XHRcdFx0Y2Fyb3VzZWwgICAgPSBjb250YWluZXIuZmluZCggJy5pbWFnZS1jYXJvdXNlbCcgKSxcblx0XHRcdFx0XHRoYXNTbGlkZXIgICA9ICggMCAhPT0gc2xpZGVyLmxlbmd0aCApLFxuXHRcdFx0XHRcdGhhc0Nhcm91c2VsID0gKCAwICE9PSBjYXJvdXNlbC5sZW5ndGggKTtcblxuXHRcdFx0XHQvLyBEZWZpbmUgY29tbW9uIGNvbmZpZy5cblx0XHRcdFx0Y29tbW9uQ29uZmlnID0ge1xuXHRcdFx0XHRcdG5hbWVzcGFjZTogICAgICdjYXJvdXNlbC0nLFxuXHRcdFx0XHRcdHNlbGVjdG9yOiAgICAgICcuc2xpZGVzID4gbGknLFxuXHRcdFx0XHRcdGFuaW1hdGlvbjogICAgICdzbGlkZScsXG5cdFx0XHRcdFx0Y29udHJvbE5hdjogICAgZmFsc2UsXG5cdFx0XHRcdFx0YW5pbWF0aW9uTG9vcDogZmFsc2UsXG5cdFx0XHRcdFx0c2xpZGVzaG93OiAgICAgZmFsc2UsXG5cdFx0XHRcdFx0dG91Y2g6ICAgICAgICAgdHJ1ZVxuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdC8vIEV4dGVuZCBjb21tb24gY29uZmlnIHdpdGggc3BlY2lmaWMgc2V0dGluZ3MgZm9yIGVhY2ggc2xpZGVyIHR5cGUuXG5cdFx0XHRcdGlmICggaGFzQ2Fyb3VzZWwgKSB7XG5cdFx0XHRcdFx0Z2V0R3JpZFNpemUgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdHZhciBncmlkU2l6ZSA9IE51bWJlciggY2Fyb3VzZWwuZGF0YSggJ2dyaWQtc2l6ZScgKSApO1xuXG5cdFx0XHRcdFx0XHRpZiAoIDYwMCA+IGNhcm91c2VsLndpZHRoKCkgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBNYXRoLmNlaWwoIGdyaWRTaXplIC8gNCApO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmICggOTAwID4gY2Fyb3VzZWwud2lkdGgoKSApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIE1hdGguY2VpbCggZ3JpZFNpemUgLyAyICk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gZ3JpZFNpemU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblxuXHRcdFx0XHRcdHNldEdyaWRTaXplID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHR2YXIgZ3JpZFNpemUgPSBnZXRHcmlkU2l6ZSgpO1xuXG5cdFx0XHRcdFx0XHRjYXJvdXNlbC5kYXRhKCAnZmxleHNsaWRlcicgKS52YXJzLm1pbkl0ZW1zID0gZ3JpZFNpemU7XG5cdFx0XHRcdFx0XHRjYXJvdXNlbC5kYXRhKCAnZmxleHNsaWRlcicgKS52YXJzLm1heEl0ZW1zID0gZ3JpZFNpemU7XG5cdFx0XHRcdFx0XHRjYXJvdXNlbC5mbGV4c2xpZGVyKCAwICk7XG5cdFx0XHRcdFx0fTtcblxuXHRcdFx0XHRcdHNpemUgPSBnZXRHcmlkU2l6ZSgpO1xuXHRcdFx0XHRcdGNhcm91c2VsQ29uZmlnID0gJC5leHRlbmQoIHt9LCBjb21tb25Db25maWcsIHtcblx0XHRcdFx0XHRcdGl0ZW1XaWR0aDogIDEyMCxcblx0XHRcdFx0XHRcdGl0ZW1NYXJnaW46IDAsXG5cdFx0XHRcdFx0XHRtaW5JdGVtczogICBzaXplLFxuXHRcdFx0XHRcdFx0bWF4SXRlbXM6ICAgc2l6ZVxuXHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICggaGFzU2xpZGVyICkge1xuXHRcdFx0XHRcdHNsaWRlckNvbmZpZyA9ICQuZXh0ZW5kKCB7fSwgY29tbW9uQ29uZmlnLCB7fSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gU3luYyBjYXJvdXNlbCBhbmQgc2xpZGVyIGlmIHRoZXkgYXJlIGJvdGggcHJlc2VudC5cblx0XHRcdFx0aWYgKCBoYXNDYXJvdXNlbCAmJiBoYXNTbGlkZXIgKSB7XG5cdFx0XHRcdFx0Y2Fyb3VzZWxDb25maWcuYXNOYXZGb3IgPSBzbGlkZXI7XG5cdFx0XHRcdFx0c2xpZGVyQ29uZmlnLnN5bmMgPSBjYXJvdXNlbDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJlZnJlc2hGbGV4c2xpZGVyID0gZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRcdFx0dmFyIGluc3RhbmNlID0gZS5kYXRhLmluc3RhbmNlLmRhdGEoICdmbGV4c2xpZGVyJyApLFxuXHRcdFx0XHRcdFx0Y3VycmVudEl0ZW0gPSBpbnN0YW5jZS5jdXJyZW50SXRlbTtcblxuXHRcdFx0XHRcdGluc3RhbmNlLnNldHVwKCk7XG5cdFx0XHRcdFx0aW5zdGFuY2UuZmxleHNsaWRlciggY3VycmVudEl0ZW0gKTtcblx0XHRcdFx0fTtcblxuXHRcdFx0XHQvLyBJbml0aWFsaXNlIGZsZXhzbGlkZXIuXG5cdFx0XHRcdGlmICggaGFzU2xpZGVyICkge1xuXHRcdFx0XHRcdHNsaWRlci5mbGV4c2xpZGVyKCBzbGlkZXJDb25maWcgKTtcblx0XHRcdFx0XHRzbGlkZXIuY2xvc2VzdCggJy50YWItcGFuZScgKS5vbmUoICdwYW5lOmZvY3VzJywgeyBpbnN0YW5jZTogc2xpZGVyIH0sIHJlZnJlc2hGbGV4c2xpZGVyICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoIGhhc0Nhcm91c2VsICkge1xuXHRcdFx0XHRcdGNhcm91c2VsLmZsZXhzbGlkZXIoIGNhcm91c2VsQ29uZmlnICk7XG5cdFx0XHRcdFx0Y2Fyb3VzZWwuY2xvc2VzdCggJy50YWItcGFuZScgKS5vbmUoICdwYW5lOmZvY3VzJywgeyBpbnN0YW5jZTogY2Fyb3VzZWwgfSwgcmVmcmVzaEZsZXhzbGlkZXIgKTtcblx0XHRcdFx0XHQkKCB3aW5kb3cgKS5vbiggJ3Jlc2l6ZScsIF8udGhyb3R0bGUoIHNldEdyaWRTaXplLCAxMDAgKSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9LFxuXG5cdFx0LyoqXG5cdFx0ICogSW5pdGlhbGlzZSBsaWdodGJveFxuXHRcdCAqL1xuXHRcdGluaXRMaWdodGJveDogZnVuY3Rpb24oKSB7XG5cdFx0XHRnbG9iYWwuYmFndWV0dGVCb3gucnVuKCAnW2RhdGEtbGlnaHRib3hdJyApO1xuXHRcdH0sXG5cblx0XHQvKipcblx0XHQgKiBJbml0aWFsaXNlIGFjY29yZGlvbnNcblx0XHQgKi9cblx0XHRpbml0QWNjb3JkaW9uczogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgYWNjb3JkaW9uVHJpZ2dlcnMgPSAnLmZpbHRlcnMgZHQnO1xuXHRcdFx0dmFyIGFjY29yZGlvbldyYXBwZXIgPSAkKCAnLmZpbHRlcnMtcGFuZWwnICk7XG5cdFx0XHRhY2NvcmRpb25XcmFwcGVyLm9uKCAnY2xpY2snLCBhY2NvcmRpb25UcmlnZ2VycywgZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0JCggdGhpcyApLnRvZ2dsZUNsYXNzKCAnc3RhdGUtY2xvc2VkJyApO1xuXHRcdFx0fSApO1xuXHRcdH0sXG5cblx0XHQvKipcblx0XHQgKiBJbml0aWFsaXNlIHRvZ2dsZXJzXG5cdFx0ICovXG5cdFx0aW5pdFRvZ2dsZXJzOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciB0b2dnbGVyVHJpZ2dlcnMgPSAkKCAnW2RhdGEtdG9nZ2xlZF0nICk7XG5cdFx0XHR0b2dnbGVyVHJpZ2dlcnMub24oICcgY2xpY2snLCBmdW5jdGlvbiggZSApIHtcblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHQkKCAkKCB0aGlzICkuZGF0YSggJ3RvZ2dsZWQnICkgKS50b2dnbGVDbGFzcyggJ3N0YXRlLXRvZ2dsZWQnICk7XG5cdFx0XHR9ICk7XG5cdFx0fSxcblxuXHRcdC8qKlxuXHRcdCAqIFNldCBzcGxhc2ggaGVpZ2h0IGFuZCBjb250cm9sIHZpZGVvIHBsYXliYWNrIGFuZCB2aXNpYmlsaXR5IG9uIHNjcm9sbC5cblx0XHQgKi9cblx0XHRpbml0U3BsYXNoOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBvZmZzZXQsIHRvcCwgdG9nZ2xlVmlkZW8sIHNldE9mZnNldCwgY29udHJvbFZpZGVvLFxuXHRcdFx0XHR2aWRlbyA9IG51bGwsXG5cdFx0XHRcdGlzUGF1c2VkID0gZmFsc2UsXG5cdFx0XHRcdHNwbGFzaCA9ICQoICcuc3BsYXNoJyApLFxuXHRcdFx0XHRpc1ZpZGVvU3BsYXNoID0gZmFsc2UsXG5cdFx0XHRcdHdyYXBwZXIgPSAkKCAnLnBhZ2Utd3JhcHBlcicgKSxcblx0XHRcdFx0aGVhZGVyID0gJCggJy5zaXRlLWhlYWRlcicgKSxcblx0XHRcdFx0d25kID0gJCggd2luZG93ICk7XG5cblx0XHRcdC8vIFRyaWdnZXIgZmVhdHVyZSBvbmx5IGZvciBzcGxhc2ggd2l0aCB2aWRlbyBiYWNrZ3JvdW5kLlxuXHRcdFx0aWYgKCAwID09PSBzcGxhc2gubGVuZ3RoICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGlzVmlkZW9TcGxhc2ggPSBzcGxhc2guaGFzQ2xhc3MoICdzcGxhc2gtdmlkZW8nICkgJiYgMCAhPT0gc3BsYXNoLmZpbmQoICdpZnJhbWUnICkubGVuZ3RoO1xuXG5cdFx0XHQvLyBDb250cm9sIFlvdVR1YmUgdmlkZW8gdXNpbmcgaXRzIEFQSSBtZXRob2RzLlxuXHRcdFx0Y29udHJvbFZpZGVvID0gZnVuY3Rpb24oIGNtZCwgYXJncyApIHtcblx0XHRcdFx0aWYgKCBfLmlzVW5kZWZpbmVkKCBnbG9iYWwuc3RyYXRoY29tVmlkZW9TcGxhc2hQbGF5ZXIgKSApIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCBfLmlzTnVsbCggdmlkZW8gKSApIHtcblx0XHRcdFx0XHR2aWRlbyA9IGdsb2JhbC5zdHJhdGhjb21WaWRlb1NwbGFzaFBsYXllcjtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoICdwbGF5JyA9PT0gY21kICkge1xuXHRcdFx0XHRcdHZpZGVvLnBsYXlWaWRlbygpO1xuXHRcdFx0XHR9IGVsc2UgaWYgKCAncGF1c2UnID09PSBjbWQgKSB7XG5cdFx0XHRcdFx0dmlkZW8ucGF1c2VWaWRlbygpO1xuXHRcdFx0XHR9IGVsc2UgaWYgKCAnc2V0U2l6ZScgPT09IGNtZCApIHtcblx0XHRcdFx0XHR2aWRlby5zZXRTaXplKCAxNiAvIDkgKiBhcmdzLmhlaWdodCwgYXJncy5oZWlnaHQgKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0Ly8gQ29udHJvbCB2aWRlbyBwbGF5YmFjayBhbmQgdmlzaWJpbGl0eSBvbiBwYWdlIHNjcm9sbC5cblx0XHRcdHRvZ2dsZVZpZGVvID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBzY3JvbGxWYWwgPSB3bmQuc2Nyb2xsVG9wKCksXG5cdFx0XHRcdFx0aW5WaWV3cG9ydCA9ICggc2Nyb2xsVmFsID49IHRvcCAmJiBzY3JvbGxWYWwgPD0gdG9wICsgb2Zmc2V0ICkgfHwgKCBzY3JvbGxWYWwgPD0gdG9wICYmIHNjcm9sbFZhbCArIG9mZnNldCA+PSB0b3AgKTtcblxuXHRcdFx0XHRpZiAoICEgaXNQYXVzZWQgJiYgISBpblZpZXdwb3J0ICkge1xuXHRcdFx0XHRcdGlzUGF1c2VkID0gdHJ1ZTtcblx0XHRcdFx0XHRjb250cm9sVmlkZW8oICdwYXVzZScgKTtcblx0XHRcdFx0XHRzcGxhc2guY3NzKCAndmlzaWJpbGl0eScsICdoaWRkZW4nICk7XG5cdFx0XHRcdH0gZWxzZSBpZiAoIGlzUGF1c2VkICYmIGluVmlld3BvcnQgKSB7XG5cdFx0XHRcdFx0aXNQYXVzZWQgPSBmYWxzZTtcblx0XHRcdFx0XHRjb250cm9sVmlkZW8oICdwbGF5JyApO1xuXHRcdFx0XHRcdHNwbGFzaC5jc3MoICd2aXNpYmlsaXR5JywgJycgKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0Ly8gRGV0ZXJtaW5lIGFuZCBzZXQgc3BsYXNoIGhlaWdodCAob2Zmc2V0IGZvciBzY3JvbGwpIG9uIHJlc2l6ZS5cblx0XHRcdHNldE9mZnNldCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRvZmZzZXQgPSB3bmQuaGVpZ2h0KCk7XG5cdFx0XHRcdHRvcCA9IHNwbGFzaC5vZmZzZXQoKS50b3A7XG5cdFx0XHRcdGlmICggISB3cmFwcGVyLmhhc0NsYXNzKCAnZXhwYW5kZWQtaGVhZGVyJyApICkge1xuXHRcdFx0XHRcdG9mZnNldCA9IG9mZnNldCAtIGhlYWRlci5vdXRlckhlaWdodCgpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly9TcGxhc2guaGVpZ2h0KCBvZmZzZXQgKTtcblx0XHRcdFx0aWYgKCBpc1ZpZGVvU3BsYXNoICkge1xuXHRcdFx0XHRcdGNvbnRyb2xWaWRlbyggJ3NldFNpemUnLCB7IGhlaWdodDogb2Zmc2V0IH0gKTtcblx0XHRcdFx0XHR0b2dnbGVWaWRlbygpO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXHRcdFx0c2V0T2Zmc2V0KCk7XG5cblx0XHRcdC8vIFRocm90dGxlIGV4cGVuc2l2ZSBmdW5jdGlvbnMgZm9yIGJldHRlciBwZXJmb3JtYW5jZS5cblx0XHRcdHduZC5vbiggJ3Jlc2l6ZScsIF8udGhyb3R0bGUoIHNldE9mZnNldCwgMTAwICkgKTtcblx0XHRcdGlmICggaXNWaWRlb1NwbGFzaCApIHtcblx0XHRcdFx0d25kLm9uKCAnc2Nyb2xsJywgXy50aHJvdHRsZSggdG9nZ2xlVmlkZW8sIDEwMCApICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8qKlxuXHRcdCAqIEluaXRpYWxpc2UgZGlzbWlzcy1hYmxlIG5vdGlmaWNhdGlvbnMuXG5cdFx0ICovXG5cdFx0aW5pdERpc21pc3NhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdF8uZWFjaCggJCggJ1tkYXRhLXRyaWdnZXI9XCJkaXNtaXNzXCJdJyApLCBmdW5jdGlvbiggbm90aWZpY2F0aW9uICkge1xuXHRcdFx0XHR2YXIgaGlkZU5vdGlmaWNhdGlvbixcblx0XHRcdFx0XHQkZWwgICAgICAgICAgPSAkKCBub3RpZmljYXRpb24gKSxcblx0XHRcdFx0XHR0b2dnbGUgICAgICAgPSAkZWwuZmluZCggJ1tkYXRhLXRvZ2dsZT1cImRpc21pc3NcIl0nICksXG5cdFx0XHRcdFx0ZGlzbWlzc0FmdGVyID0gJGVsLmRhdGEoICdkaXNtaXNzLWFmdGVyJyApO1xuXG5cdFx0XHRcdC8qKlxuXHRcdFx0XHQgKiBIaWRlIG5vdGlmaWNhdGlvbi5cblx0XHRcdFx0ICogQHBhcmFtIHtFdmVudH0gZVxuXHRcdFx0XHQgKi9cblx0XHRcdFx0aGlkZU5vdGlmaWNhdGlvbiA9IGZ1bmN0aW9uKCBlICkge1xuXHRcdFx0XHRcdGlmICggISBfLmlzVW5kZWZpbmVkKCBlICkgKSB7XG5cdFx0XHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdCRlbC5mYWRlT3V0KCAzNjAgKTtcblx0XHRcdFx0fTtcblxuXHRcdFx0XHQvKipcblx0XHRcdFx0ICogTGlzdGVuIGZvciBjbGljayBldmVudCBvbmx5IG9uY2UuXG5cdFx0XHRcdCAqL1xuXHRcdFx0XHR0b2dnbGUub25lKCAnY2xpY2snLCBoaWRlTm90aWZpY2F0aW9uICk7XG5cblx0XHRcdFx0LyoqXG5cdFx0XHRcdCAqIElmIG5vdGlmaWNhdGlvbiBpcyB0byBiZSBkaXNtaXNzZWQgYXV0b21hdGljYWxseSwgYWRkIGRlbGF5LlxuXHRcdFx0XHQgKi9cblx0XHRcdFx0aWYgKCAhIF8uaXNVbmRlZmluZWQoIGRpc21pc3NBZnRlciApICYmIDAgPCBkaXNtaXNzQWZ0ZXIgKSB7XG5cdFx0XHRcdFx0Xy5kZWxheSggaGlkZU5vdGlmaWNhdGlvbiwgZGlzbWlzc0FmdGVyICk7XG5cdFx0XHRcdH1cblx0XHRcdH0sIHRoaXMgKTtcblx0XHR9XG5cdH07XG5cblx0QXBwID0gZ2xvYmFsLnN0cmF0O1xuXG5cdCQoZnVuY3Rpb24oKSB7XG5cdFx0QXBwLmluaXQoKTtcblx0fSk7XG5cbn0pKCBqUXVlcnksIHdpbmRvdywgd2luZG93Ll8gKTtcbiIsIi8qZ2xvYmFsIG1vZHVsZSovXG5tb2R1bGUuZXhwb3J0cyA9ICggZnVuY3Rpb24oICQsIGdsb2JhbCwgXyApIHtcblxuXHR2YXIgYWN0aXZlQ2xhc3MgPSAnYWN0aXZlJyxcblx0XHRjb250YWluZXJTZWxlY3RvciA9ICdbIGRhdGEtdG9nZ2xlPVwidGFic1wiIF0nLFxuXHRcdG5hdlNlbGVjdG9yID0gJy50YWJzLW5hdiBhJyxcblx0XHRjb250ZW50U2VsZWN0b3IgPSAnLnRhYnMtY29udGVudCcsXG5cdFx0cGFuZVNlbGVjdG9yID0gJy50YWItcGFuZSc7XG5cblx0LyoqXG5cdCAqIEluaXRpYWxpc2UgdGFicy5cblx0ICovXG5cdGZ1bmN0aW9uIGluaXRpYWxpc2UoIGNvbnRhaW5lciApIHtcblx0XHR2YXIgYWN0aXZlVGFiLCB0YWJzID0ge307XG5cblx0XHR0YWJzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcblx0XHR0YWJzLm5hdiA9IGNvbnRhaW5lci5maW5kKCBuYXZTZWxlY3RvciApLFxuXHRcdHRhYnMuY29udGVudCA9IGNvbnRhaW5lci5maW5kKCBjb250ZW50U2VsZWN0b3IgKTtcblx0XHR0YWJzLnBhbmVzID0gdGFicy5jb250ZW50LmZpbmQoIHBhbmVTZWxlY3RvciApO1xuXG5cdFx0dHJ5IHtcblx0XHRcdGlmICggXy5pc1VuZGVmaW5lZCggdGFicy5uYXYgKSB8fCAwID09PSB0YWJzLm5hdi5sZW5ndGggKSB7XG5cdFx0XHRcdHRocm93IG5ldyBFcnJvciggJ1RhYnM6IENvdWxkIG5vdCBpbml0aWFsaXNlOyB0aGVyZSBpcyBubyB0YWJzIG5hdmlnYXRpb24uJyApO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCBfLmlzVW5kZWZpbmVkKCB0YWJzLnBhbmVzICkgfHwgMCA9PT0gdGFicy5wYW5lcy5sZW5ndGggKSB7XG5cdFx0XHRcdHRocm93IG5ldyBFcnJvciggJ1RhYnM6IENvdWxkIG5vdCBpbml0aWFsaXNlOyB0aGVyZSBhcmUgbm8gcGFuZXMuJyApO1xuXHRcdFx0fVxuXHRcdH0gY2F0Y2ggKCBlICkge1xuXHRcdFx0d2luZG93LmNvbnNvbGUuZXJyb3IoIGUgKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoICcnICE9PSBkb2N1bWVudC5sb2NhdGlvbi5oYXNoICkge1xuXHRcdFx0YWN0aXZlVGFiID0gdGFicy5uYXYuZmlsdGVyKCAnW2hyZWY9XCInICsgZG9jdW1lbnQubG9jYXRpb24uaGFzaCArICdcIl0nICk7XG5cdFx0fVxuXG5cdFx0aWYgKCAndW5kZWZpbmVkJyA9PT0gdHlwZW9mIGFjdGl2ZVRhYiB8fCAwID09PSBhY3RpdmVUYWIubGVuZ3RoICkge1xuXHRcdFx0YWN0aXZlVGFiID0gdGFicy5uYXYuZmlsdGVyKCAnLicgKyBhY3RpdmVDbGFzcyApO1xuXHRcdH1cblxuXHRcdGlmICggMCA9PT0gYWN0aXZlVGFiLmxlbmd0aCApIHtcblx0XHRcdGFjdGl2ZVRhYiA9IHRhYnMubmF2O1xuXHRcdH1cblx0XHRhY3RpdmVUYWIgPSBhY3RpdmVUYWIuZmlyc3QoKTtcblx0XHR0b2dnbGUoIGFjdGl2ZVRhYiwgdGFicyApO1xuXG5cdFx0Y29udGFpbmVyLm9uKCAnY2xpY2snLCBuYXZTZWxlY3RvciwgZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHR3aW5kb3cubG9jYXRpb24uaGFzaCA9IGUudGFyZ2V0Lmhhc2g7XG5cdFx0XHR0b2dnbGUoICQoIGUudGFyZ2V0ICksIHRhYnMgKTtcblx0XHR9ICk7XG5cdH1cblxuXHQvKipcblx0ICogVG9nZ2xlIHRhYi5cblx0ICovXG5cdGZ1bmN0aW9uIHRvZ2dsZSggdGFiLCB0YWJzICkge1xuXHRcdHZhciBwYW5lID0gdGFicy5wYW5lcy5maWx0ZXIoIHRhYi5hdHRyKCAnaHJlZicgKSApO1xuXG5cdFx0dGFicy5uYXYucmVtb3ZlQ2xhc3MoIGFjdGl2ZUNsYXNzICk7XG5cdFx0dGFiLmFkZENsYXNzKCBhY3RpdmVDbGFzcyApO1xuXHRcdHRhYi50cmlnZ2VyKCAndGFiOmZvY3VzJyApO1xuXG5cdFx0dGFicy5wYW5lcy5yZW1vdmVDbGFzcyggYWN0aXZlQ2xhc3MgKTtcblx0XHRwYW5lLmFkZENsYXNzKCBhY3RpdmVDbGFzcyApO1xuXHRcdHBhbmUudHJpZ2dlciggJ3BhbmU6Zm9jdXMnICk7XG5cdH1cblxuXHQkLmVhY2goICQoIGNvbnRhaW5lclNlbGVjdG9yICksIGZ1bmN0aW9uKCkge1xuXHRcdGluaXRpYWxpc2UoICQoIHRoaXMgKSApO1xuXHR9ICk7XG5cblx0LyoqXG5cdCAqIFJldHVybiBwdWJsaWMgQVBJIChlbXB0eSkuXG5cdCAqL1xuXHRyZXR1cm4ge307XG5cbn0gKSggalF1ZXJ5LCB3aW5kb3csIHdpbmRvdy5fICk7XG4iXX0="}